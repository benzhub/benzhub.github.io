[{"body":"","link":"https://benzhub.github.io/","section":"","tags":null,"title":""},{"body":"","link":"https://benzhub.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://benzhub.github.io/post/","section":"post","tags":null,"title":"Posts"},{"body":"","link":"https://benzhub.github.io/tags/python/","section":"tags","tags":null,"title":"python"},{"body":"Python function 函式 1# function = a block of code which is executed only when it is called. 2# function只有在被調用的時候，才會執行 3 4def hello(name): 5 print(\u0026#34;hello! \u0026#34; + name) 6 print(\u0026#34;Have a nice day\u0026#34;) 7 8def hello2(first_name, last_name, age = None): # age這個參數可有可無(因為預設值為None) 9 print(\u0026#34;hello! \u0026#34; + first_name + last_name) 10 print(f\u0026#34;{first_name} {last_name} is {str(age)} years old.\u0026#34;) 11 print(\u0026#34;Have a nice day\u0026#34;) 12 13first_name = \u0026#34;Benz\u0026#34; 14last_name = \u0026#34;Hub\u0026#34; 15 16hello2(first_name, last_name) 上一篇 Python Indexing 索引 | Python 教學系列20\n下一篇 ","link":"https://benzhub.github.io/post/python/21/","section":"post","tags":["Python"],"title":"Python function 函式 | Python 教學系列21"},{"body":"","link":"https://benzhub.github.io/categories/python-%E6%95%99%E5%AD%B8%E7%B3%BB%E5%88%97/","section":"categories","tags":null,"title":"Python 教學系列"},{"body":"","link":"https://benzhub.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"Python Indexing 索引 1name = \u0026#34;ben Bang!\u0026#34; 2# if(name[0].islower()): 3# name = name.capitalize() # string第一個單字的第一個字大寫，其餘都是小寫 4 5first_name = name[:3].upper() # 全部大寫 6last_name = name[4:].lower() # 全部小寫 7last_character = name[-1] # 索引的最後一個 8 9print(first_name, last_name) # BEN bang! 10print(last_character) # ! 上一篇 Python dictionary 字典 | Python 教學系列19\n下一篇 Python function 函式 | Python 教學系列21\n","link":"https://benzhub.github.io/post/python/20/","section":"post","tags":["Python"],"title":"Python Indexing 索引 | Python 教學系列20"},{"body":"Python dictionary 字典 1# 字典是一個可以被改變，沒有順序的集合，並且使用key value去索引，所以效能會非常不錯 2 3capitals = { 4 \u0026#39;USA\u0026#39;: \u0026#39;Washington DC\u0026#39;, 5 \u0026#39;indea\u0026#39;: \u0026#39;New Dehli\u0026#39;, 6 \u0026#39;China\u0026#39;: \u0026#39;Beijing\u0026#39;, 7 \u0026#39;Russia\u0026#39;: \u0026#39;Moscow\u0026#39; 8} 9 10capitals.update({\u0026#39;Germany\u0026#39;: \u0026#39;Berlin\u0026#39;}) # 新增 {\u0026#39;Germany\u0026#39;: \u0026#39;Berlin\u0026#39;} 11capitals.update({\u0026#39;USA\u0026#39;: \u0026#39;California\u0026#39;}) # 更改 {\u0026#39;USA\u0026#39;: \u0026#39;California\u0026#39;} 12capitals.pop(\u0026#39;China\u0026#39;) # 刪除 {\u0026#39;China\u0026#39;: \u0026#39;Beijing\u0026#39;} 13# capitals.clear() # 清除所有 14 15# print(capitals[\u0026#39;Russia\u0026#39;]) # Moscow 16# None # 在dictionay中所引的話，使用get如果索引不到會返回none而不是直接報錯 17# print(capitals.get(\u0026#39;Germany\u0026#39;)) 18 19# print(capitals.keys()) # dict_keys([\u0026#39;USA\u0026#39;, \u0026#39;India\u0026#39;, \u0026#39;China\u0026#39;, \u0026#39;Russia\u0026#39;]) 20# print(capitals.values()) # dict_values([\u0026#39;Washington DC\u0026#39;, \u0026#39;New Dehli\u0026#39;, \u0026#39;Beijing\u0026#39;, \u0026#39;Moscow\u0026#39;]) 21# print(capitals.items()) # dict_items([(\u0026#39;USA\u0026#39;, \u0026#39;Washington DC\u0026#39;), (\u0026#39;India\u0026#39;, \u0026#39;New Dehli\u0026#39;), (\u0026#39;China\u0026#39;, \u0026#39;Beijing\u0026#39;), (\u0026#39;Russia\u0026#39;, \u0026#39;Moscow\u0026#39;)]) 22 23for key, value in capitals.items(): 24 print(key, value) 25\u0026#34;\u0026#34;\u0026#34; 26USA California 27India New Dehli 28China Beijing 29Russia Moscow 30Germany Berlin 31\u0026#34;\u0026#34;\u0026#34; 上一篇 Python Set 集合 | Python 教學系列18\n下一篇 Python Indexing 索引 | Python 教學系列20\n","link":"https://benzhub.github.io/post/python/19/","section":"post","tags":["Python"],"title":"Python dictionary 字典 | Python 教學系列19"},{"body":"","link":"https://benzhub.github.io/tags/css/","section":"tags","tags":null,"title":"css"},{"body":" 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;CSS內聯和塊元素\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 * { 10 margin: 0; 11 padding: 0; 12 } 13 li { 14 /* 將li塊級元素設定成內聯元素，同時前面默認的小黑點也會不見 */ 15 display: inline; 16 } 17 18 li a { 19 padding-right: 20px; 20 text-decoration: none; 21 color: orangered; 22 } 23 li a:hover { 24 color: orange; 25 } 26 .img-test { 27 /* 如果想要讓元素置中，可以將它設定為塊級元素後margin: auto 就會置中 */ 28 /* display: block; */ 29 max-width: 200px; 30 margin: auto; 31 /* margin-top: 20px; */ 32 padding: 20px 20px; 33 } 34 .img-test img { 35 width: 100%; 36 } 37 .box { 38 /* display: inline; */ 39 /* display: inline 不可以與width padding margin 一起使用 ， 如果一起使用width padding margi將會失去效用*/ 40 /* 需要使用inline-block */ 41 display: inline-block; 42 box-sizing: border-box; 43 width: 32.5%; 44 background: #f4f4f4; 45 padding: 20px; /* inline 在設定padding的時候要記得使用box-sizing: border-box 避免超出預設盒子大小 */ 46 margin-bottom: 15px; 47 } 48 \u0026lt;/style\u0026gt; 49 \u0026lt;/head\u0026gt; 50 \u0026lt;body\u0026gt; 51 \u0026lt;ul\u0026gt; 52 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;HTML\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 53 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;CSS\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 54 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Javascript\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 55 \u0026lt;/ul\u0026gt; 56 \u0026lt;div class=\u0026#34;img-test\u0026#34;\u0026gt; 57 \u0026lt;img src=\u0026#34;./images/sample.jpg\u0026#34; alt=\u0026#34;\u0026#34; /\u0026gt; 58 \u0026lt;/div\u0026gt; 59 \u0026lt;div class=\u0026#34;img-test\u0026#34;\u0026gt; 60 \u0026lt;img src=\u0026#34;./images/sample.jpg\u0026#34; alt=\u0026#34;\u0026#34; /\u0026gt; 61 \u0026lt;/div\u0026gt; 62 \u0026lt;div class=\u0026#34;img-test\u0026#34;\u0026gt; 63 \u0026lt;img src=\u0026#34;./images/sample.jpg\u0026#34; alt=\u0026#34;\u0026#34; /\u0026gt; 64 \u0026lt;/div\u0026gt; 65 \u0026lt;br /\u0026gt; 66 \u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt; 67 \u0026lt;h3\u0026gt;標題1\u0026lt;/h3\u0026gt; 68 \u0026lt;p\u0026gt; 69 Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit cumque 70 voluptate nulla adipisci dignissimos nihil modi pariatur facere sit, 71 corporis amet, corrupti culpa sequi error quidem sed aperiam ducimus 72 autem? 73 \u0026lt;/p\u0026gt; 74 \u0026lt;/div\u0026gt; 75 \u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt; 76 \u0026lt;h3\u0026gt;標題1\u0026lt;/h3\u0026gt; 77 \u0026lt;p\u0026gt; 78 Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit cumque 79 voluptate nulla adipisci dignissimos nihil modi pariatur facere sit, 80 corporis amet, corrupti culpa sequi error quidem sed aperiam ducimus 81 autem? 82 \u0026lt;/p\u0026gt; 83 \u0026lt;/div\u0026gt; 84 \u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt; 85 \u0026lt;h3\u0026gt;標題1\u0026lt;/h3\u0026gt; 86 \u0026lt;p\u0026gt; 87 Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit cumque 88 voluptate nulla adipisci dignissimos nihil modi pariatur facere sit, 89 corporis amet, corrupti culpa sequi error quidem sed aperiam ducimus 90 autem? 91 \u0026lt;/p\u0026gt; 92 \u0026lt;/div\u0026gt; 93 \u0026lt;/body\u0026gt; 94\u0026lt;/html\u0026gt; 上一篇CSS 導航欄和菜單欄樣式 | 前端基礎教學22\n下一篇\n","link":"https://benzhub.github.io/post/frontend-basic/23/","section":"post","tags":["html","css"],"title":"CSS display屬性 | 前端基礎教學23"},{"body":"","link":"https://benzhub.github.io/tags/html/","section":"tags","tags":null,"title":"html"},{"body":"","link":"https://benzhub.github.io/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A4%8E%E6%95%99%E5%AD%B8/","section":"categories","tags":null,"title":"前端基礎教學"},{"body":" 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;CSS菜單欄和導航\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 body { 10 font-family: Arial, Helvetica, sans-serif; 11 } 12 /* 導航樣式 */ 13 .navbar { 14 /* 清除li小圓點 */ 15 list-style: none; 16 /* 清除ul tag默認自帶的邊距 */ 17 margin: 0; 18 padding: 0; 19 background: #4c6ca0; 20 border-radius: 5px; 21 /* 在子元素如果要設定float的話，要設定overflow: auto，子元素才不會把父元素的樣式清除掉 */ 22 overflow: auto; 23 } 24 25 .navbar li { 26 float: left; 27 } 28 29 .navbar li a { 30 display: block; /* 將a tag設定為block box ， 讓padding 上下的邊距可以生效 */ 31 color: #fff; 32 text-decoration: none; 33 padding: 15px 20px; /* 因為a tag是inline box 所以第一個上下15px並不會生效 */ 34 } 35 36 .navbar li a:hover { 37 background-color: #446190; 38 color: #f4f4f4; 39 } 40 41 /* 側邊菜單欄 */ 42 .side-menu { 43 list-style: none; 44 border: 1px #ddd solid; 45 border-radius: 10px; 46 width: 300px; 47 padding: 20px; 48 } 49 50 .side-menu li { 51 font-size: 18px; 52 line-height: 2.4em; 53 border-bottom: 1px #ddd dotted; 54 } 55 56 /* 設定最後一個子元素不要有底線 */ 57 .side-menu li:last-child { 58 border: none; 59 } 60 61 .side-menu li a { 62 color: #333; 63 text-decoration: none; 64 } 65 66 .side-menu li a:hover { 67 color: coral; 68 } 69 \u0026lt;/style\u0026gt; 70 \u0026lt;/head\u0026gt; 71 \u0026lt;body\u0026gt; 72 \u0026lt;ul class=\u0026#34;navbar\u0026#34;\u0026gt; 73 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;主頁\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 74 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;關於我們\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 75 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;聯繫我們\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 76 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;服務\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 77 \u0026lt;/ul\u0026gt; 78 \u0026lt;ul class=\u0026#34;side-menu\u0026#34;\u0026gt; 79 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;主頁\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 80 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;關於我們\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 81 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;聯繫我們\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 82 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;服務\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 83 \u0026lt;/ul\u0026gt; 84 \u0026lt;/body\u0026gt; 85\u0026lt;/html\u0026gt; 上一篇CSS 超連結和按鈕 | 前端基礎教學21\n下一篇CSS display屬性 | 前端基礎教學23\n","link":"https://benzhub.github.io/post/frontend-basic/22/","section":"post","tags":["html","css"],"title":"CSS 導航欄和菜單欄樣式 | 前端基礎教學22"},{"body":" 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;CSS超連結和按鈕\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 a { 10 color: #333; 11 text-decoration: none; 12 } 13 /* 偽類選擇器 */ 14 /* link(a link 默認), hover active, visited */ 15 16 /* 滑鼠上懸變換樣式(可以用於所有元素) */ 17 a:hover { 18 color: coral; 19 font-size: 40px; 20 } 21 22 /* 被激活後 */ 23 /* a:visited { 24 color: blue; 25 font-size: 120px; 26 } */ 27 28 /* 被點擊後 */ 29 /* a:active { 30 color: red; 31 } */ 32 33 /* 按鈕樣式 */ 34 .btn { 35 background: #4c6ca0; 36 color: #fff; 37 border: none; 38 font-size: 16px; 39 padding: 10px 20px; 40 border-radius: 5px; 41 /* 懸浮小手指 */ 42 cursor: pointer; 43 } 44 .btn:hover { 45 color: #f4f4f4; 46 background: #446190; 47 } 48 \u0026lt;/style\u0026gt; 49 \u0026lt;/head\u0026gt; 50 \u0026lt;body\u0026gt; 51 \u0026lt;br /\u0026gt; 52 \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;btn\u0026#34;\u0026gt;連結\u0026lt;/a\u0026gt; 53 \u0026lt;br /\u0026gt; 54 \u0026lt;br /\u0026gt; 55 \u0026lt;button class=\u0026#34;btn\u0026#34;\u0026gt;按鈕\u0026lt;/button\u0026gt; 56 \u0026lt;/body\u0026gt; 57\u0026lt;/html\u0026gt; 上一篇CSS 浮動和對齊(float) | 前端基礎教學20\n下一篇CSS 導航欄和菜單欄樣式 | 前端基礎教學22\n","link":"https://benzhub.github.io/post/frontend-basic/21/","section":"post","tags":["html","css"],"title":"CSS 超連結和按鈕 | 前端基礎教學21"},{"body":" 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;CSS浮動和對齊\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 * { 10 box-sizing: border-box; 11 } 12 /* 清除前面所設定的float */ 13 .clr { 14 clear: both; 15 } 16 body { 17 font-family: Arial, Helvetica, sans-serif; 18 line-height: 1.4em; 19 } 20 /* 居中 */ 21 .container { 22 /* 當邊距大於960px時左右會被固定住，但是小於960px時，就會自動調整 */ 23 max-width: 960px; 24 /* margin:auto 會將左右兩邊的外邊距自動相等進而達到置中的效果 */ 25 margin: auto; 26 } 27 .box { 28 background: #f4f4f4; 29 border: 1px solid #333; 30 padding: 20px; 31 margin-bottom: 15px; 32 } 33 34 /* 文本對齊 */ 35 .box p { 36 /* 左對齊默認 */ 37 text-align: left; 38 /* 右對齊 */ 39 text-align: right; 40 /* 居中 */ 41 text-align: center; 42 /* 兩端對齊 */ 43 text-align: justify; 44 } 45 46 /* 設置浮動 */ 47 /* float在修改時，容易破壞結構(重疊)，所以現在已經比較不常用了 */ 48 #box-2 { 49 float: left; 50 width: 68%; 51 } 52 #box-3 { 53 float: right; 54 width: 30%; 55 } 56 \u0026lt;/style\u0026gt; 57 \u0026lt;/head\u0026gt; 58 \u0026lt;body\u0026gt; 59 \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; 60 \u0026lt;div id=\u0026#34;box-1\u0026#34; class=\u0026#34;box\u0026#34;\u0026gt; 61 \u0026lt;h3\u0026gt;標題1\u0026lt;/h3\u0026gt; 62 \u0026lt;p\u0026gt; 63 Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas error 64 minima reprehenderit, recusandae nesciunt numquam veritatis. Vitae 65 suscipit recusandae consectetur. 66 \u0026lt;/p\u0026gt; 67 \u0026lt;/div\u0026gt; 68 \u0026lt;div id=\u0026#34;box-2\u0026#34; class=\u0026#34;box\u0026#34;\u0026gt; 69 \u0026lt;h3\u0026gt;標題2\u0026lt;/h3\u0026gt; 70 \u0026lt;p\u0026gt; 71 Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas error 72 minima reprehenderit, recusandae nesciunt numquam veritatis. Vitae 73 suscipit recusandae consectetur. 74 \u0026lt;/p\u0026gt; 75 \u0026lt;/div\u0026gt; 76 \u0026lt;div id=\u0026#34;box-3\u0026#34; class=\u0026#34;box\u0026#34;\u0026gt; 77 \u0026lt;h3\u0026gt;標題3\u0026lt;/h3\u0026gt; 78 \u0026lt;p\u0026gt; 79 Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas error 80 minima reprehenderit, recusandae nesciunt numquam veritatis. Vitae 81 suscipit recusandae consectetur. 82 \u0026lt;/p\u0026gt; 83 \u0026lt;/div\u0026gt; 84 \u0026lt;div class=\u0026#34;clr\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 85 \u0026lt;div id=\u0026#34;box-4\u0026#34; class=\u0026#34;box\u0026#34;\u0026gt; 86 \u0026lt;h3\u0026gt;標題4\u0026lt;/h3\u0026gt; 87 \u0026lt;p\u0026gt; 88 Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas error 89 minima reprehenderit, recusandae nesciunt numquam veritatis. Vitae 90 suscipit recusandae consectetur. 91 \u0026lt;/p\u0026gt; 92 \u0026lt;/div\u0026gt; 93 \u0026lt;/div\u0026gt; 94 \u0026lt;/body\u0026gt; 95\u0026lt;/html\u0026gt; 上一篇CSS 盒模型盒內外邊距 | 前端基礎教學19\n下一篇CSS 超連結和按鈕 | 前端基礎教學21\n","link":"https://benzhub.github.io/post/frontend-basic/20/","section":"post","tags":["html","css"],"title":"CSS 浮動和對齊(float) | 前端基礎教學20"},{"body":"標準盒模型 IE盒模型 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;CSS盒模型和margin/padding\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 /* 清空瀏覽器默認樣式 CSS樣式重置 */ 10 * { 11 margin: 0; 12 padding: 0; 13 14 /* IE盒模型 */ 15 /* 固定盒子的大小不要被padding影響 */ 16 box-sizing: border-box; 17 } 18 .box { 19 background: #f4f4f4; 20 border: 2px #777 solid; 21 width: 500px; 22 /* 設定所有padding */ 23 /* 標準盒模型中，增加padding時，會撐大盒子的大小 */ 24 /* padding: 120px; */ 25 padding: 20px; 26 /* 設置padding單邊 */ 27 padding-top: 10px; 28 padding-right: 20px; 29 padding-bottom: 10px; 30 padding-left: 20px; 31 /* 簡寫方式 順時針 上 又 下 左 */ 32 padding: 10px 20px 10px 20px; 33 34 /* 簡寫方式(對稱值相等) 順時針 (上下)(左右) */ 35 padding: 10px 20px; 36 37 /* 設定所有margin */ 38 /* 標準盒模型中，增加margin時，會撐大盒子的大小 */ 39 /* margin: 120px; */ 40 margin: 20px; 41 /* 設置margin單邊 */ 42 margin-top: 10px; 43 margin-right: 20px; 44 margin-bottom: 10px; 45 margin-left: 20px; 46 /* 簡寫方式 順時針 上 又 下 左 */ 47 margin: 10px 20px 10px 20px; 48 49 /* 簡寫方式(對稱值相等) 順時*/ 50 margin: 10px 20px; 51 } 52 53 .box h3 { 54 padding-bottom: 10px; 55 } 56 \u0026lt;/style\u0026gt; 57 \u0026lt;/head\u0026gt; 58 \u0026lt;body\u0026gt; 59 \u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt; 60 \u0026lt;h3\u0026gt;Box 1\u0026lt;/h3\u0026gt; 61 \u0026lt;p\u0026gt; 62 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Id deserunt 63 voluptatum necessitatibus minima eaque asperiores accusamus, vel sequi 64 quas mollitia. 65 \u0026lt;/p\u0026gt; 66 \u0026lt;/div\u0026gt; 67 68 \u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt; 69 \u0026lt;h3\u0026gt;Box 2\u0026lt;/h3\u0026gt; 70 \u0026lt;p\u0026gt; 71 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Id deserunt 72 voluptatum necessitatibus minima eaque asperiores accusamus, vel sequi 73 quas mollitia. 74 \u0026lt;/p\u0026gt; 75 \u0026lt;/div\u0026gt; 76 \u0026lt;/body\u0026gt; 77\u0026lt;/html\u0026gt; 上一篇CSS 背景和邊框 | 前端基礎教學18\n下一篇CSS CSS浮動和對齊(float) | 前端基礎教學20\n","link":"https://benzhub.github.io/post/frontend-basic/19/","section":"post","tags":["html","css"],"title":"CSS 盒模型盒內外邊距 | 前端基礎教學19"},{"body":"Python Set 集合 1# set(集合)是一個無序(unordered)無索引(unindexed)，且不可以有重複值 2# 如果有重複值，則只會出現一個 3utensils = {\u0026#34;fork\u0026#34;, \u0026#34;spoon\u0026#34;, \u0026#34;knife\u0026#34;} 4dishes = {\u0026#34;bowl\u0026#34;, \u0026#34;plate\u0026#34;, \u0026#34;cup\u0026#34;, \u0026#34;knife\u0026#34;} 5 6utensils.add(\u0026#34;napkin\u0026#34;) # 增加napkin到set裏面 7utensils.remove(\u0026#34;fork\u0026#34;) # 在set裏面移除fork 8utensils.clear() # 清除set裏面的所有項目 9utensils.update(dishes) # 將dishes 更新到 utensils 裏面 10dinner_table = utensils.union(dishes) # 將dishes 聯合到 utensils 裏面 11print(utensils.difference(dishes)) # {\u0026#39;fork\u0026#39;, \u0026#39;spoon\u0026#39;} 12print(dishes.difference(utensils)) # {\u0026#39;cup\u0026#39;, \u0026#39;bowl\u0026#39;, \u0026#39;plate\u0026#39;} 13 14for x in utensils: 15 print(x) 上一篇 Python Tuple 元組 | Python 教學系列17\n下一篇 Python dictionary 字典 | Python 教學系列19\n","link":"https://benzhub.github.io/post/python/18/","section":"post","tags":["Python"],"title":"Python Set 集合 | Python 教學系列18"},{"body":"Python Tuple 元組 1student = (\u0026#34;Ben\u0026#34;, 21, \u0026#34;male\u0026#34;) 2 3# print(student.count(\u0026#34;Ben\u0026#34;)) # 1 4# print(student.index(\u0026#34;male\u0026#34;)) # 2 5 6for x in student: 7 print(x) 8 9if \u0026#34;Ben\u0026#34; in student: 10 print(\u0026#34;Ben is here!\u0026#34;) # Ben is here! 上一篇 Python 多重 list 用法 | Python 教學系列16\n下一篇 Python Set 集合 | Python 教學系列18\n","link":"https://benzhub.github.io/post/python/17/","section":"post","tags":["Python"],"title":"Python Tuple 元組 | Python 教學系列17"},{"body":"Python 多重 list 用法 1drinks = [\u0026#34;coffee\u0026#34;, \u0026#34;soda\u0026#34;, \u0026#34;tea\u0026#34;] 2dinner = [\u0026#34;pizza\u0026#34;, \u0026#34;hamburger\u0026#34;, \u0026#34;hotdog\u0026#34;] 3dessert = [\u0026#34;cake\u0026#34;, \u0026#34;ice cream\u0026#34;, \u0026#34;chocolate\u0026#34;] 4 5food = [drinks, dinner, dessert] 6print(food[0][0]) # coffee 7print(food[2][2]) # chocolate 上一篇 Python list 用法 | Python 教學系列15\n下一篇 Python Tuple 元組 | Python 教學系列17\n","link":"https://benzhub.github.io/post/python/16/","section":"post","tags":["Python"],"title":"Python 多重 list 用法 | Python 教學系列16"},{"body":"Python list 用法 1food = [\u0026#34;pizza\u0026#34;, \u0026#34;hamburger\u0026#34;, \u0026#34;hot dog\u0026#34;, \u0026#34;pasta\u0026#34;, \u0026#34;pudding\u0026#34;] 2 3print(food[0]) # pizza 4print(food[1]) # hamburger 5print(food[2]) # hot dog 6print(food[3]) # pasta 7print(food[4]) # pudding 8 9# 將index 2 替換成 sushi 10food[2] = \u0026#34;sushi\u0026#34; 11 12food.append(\u0026#34;ice cream\u0026#34;) # 增加 ice cream 成為最後一項 13food.remove(\u0026#34;pasta\u0026#34;) # 刪除 pasta 14food.pop() # 刪除最後一項 15food.insert(0, \u0026#34;cake\u0026#34;) # 在index 0 的地方塞入cake 16food.sort() # 安照字母順序排序 17food.clear() # 清空list所有項目 18 19 20 21for x in food: 22 print(x) 上一篇 Python break continue pass 用法 | Python 教學系列14\n下一篇 Python 多重 list 用法 | Python 教學系列16\n","link":"https://benzhub.github.io/post/python/15/","section":"post","tags":["Python"],"title":"Python list 用法 | Python 教學系列15"},{"body":"Python break continue pass 用法 1# break: 跳出迴圈 2# continue: 忽略當前此次，繼續跑接下來的迴圈 3# pass: 什麼都不做 4 5while True: 6 name = input(\u0026#34;請輸入你的名字: \u0026#34;) 7 if name != \u0026#34;\u0026#34;: 8 break 9 10phone_number = \u0026#34;123-456-7890\u0026#34; 11for i in phone_number: 12 if i == \u0026#34;-\u0026#34;: 13 continue 14 print(i) 15 16for i in range(1, 33): 17 if i == 13: 18 pass 19 else: 20 print(i) 上一篇 Python 多重迴圈 | Python 教學系列13\n下一篇 Python list 用法 | Python 教學系列15\n","link":"https://benzhub.github.io/post/python/14/","section":"post","tags":["Python"],"title":"Python break continue pass 用法 | Python 教學系列14"},{"body":"Python 多重迴圈 1rows = int(input(\u0026#34;有幾行?: \u0026#34;)) 2columns = int(input(\u0026#34;有幾列?: \u0026#34;)) 3symbol = input(\u0026#34;輸入一個特殊符號: \u0026#34;) 4 5for i in range(rows): 6 for j in range(columns): 7 print(symbol, end=\u0026#34;\u0026#34;) # 防止for換行 8 # 最後一個換行 9 print() 上一篇 Python for 迴圈 | Python 教學系列12\n下一篇 Python break continue pass 用法 | Python 教學系列14\n","link":"https://benzhub.github.io/post/python/13/","section":"post","tags":["Python"],"title":"Python 多重迴圈 | Python 教學系列13"},{"body":"Python for 迴圈 1import time 2for i in range(10): # 0~9 3 print(i+1) # 1~10 4 5for i in range(50, 100): # 50~99 6 print(i) 7 8for i in range(50, 100+1, 2): # 50~100之間的偶數(間隔為2) 9 print(i) 10 11for i in \u0026#34;BenzHub\u0026#34;: 12 print(i) 13 14# 倒數10秒 15for seconds in range(10, 0, -1): 16 print(seconds) 17 time.sleep(1) 18print(\u0026#34;10秒倒數計時結束!!\u0026#34;) 上一篇 Python while 迴圈 | Python 教學系列11\n下一篇 Python 多重迴圈 | Python 教學系列13\n","link":"https://benzhub.github.io/post/python/12/","section":"post","tags":["Python"],"title":"Python for 迴圈 | Python 教學系列12"},{"body":" 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;CSS背景和邊框\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 #box-1 { 10 background-color: antiquewhite; 11 /* 邊框寬度 */ 12 border-width: 3px; 13 /* 邊框顏色 */ 14 border-color: red; 15 /* 邊框樣式: 實線 */ 16 border-style: solid; 17 /* 邊框樣式: 原點線 */ 18 border-style: dotted; 19 /* 邊框樣式: 虛線 */ 20 border-style: dashed; 21 22 /* border 複合屬性設定寫法 */ 23 border: 3px red dashed; 24 border-radius: 10px; 25 } 26 27 #box-2 { 28 background-color: #333; 29 color: #fff; 30 /* border-bottom border-left border-right */ 31 border-top: 3px solid blue; 32 border-top-left-radius: 10px; 33 border-top-right-radius: 10px; 34 } 35 36 #box-3 { 37 background-image: url(./images/sample.jpg); 38 /* 不重複裂圖 */ 39 background-repeat: no-repeat; 40 /* 向右向下各移動100px */ 41 background-position: 100px 100px; 42 /* 向左向上各移動100px */ 43 background-position: -100px -100px; 44 /* 置中 */ 45 background-position: center center; 46 /* 背景圖完整覆蓋 */ 47 background-size: cover; 48 width: 600px; 49 height: 300px; 50 /* ///////////////////////////////////////////////////////////////// */ 51 52 /* backgroud複合屬性 */ 53 background: url(./images/sample.jpg) no-repeat center center/cover; 54 color: #fff; 55 width: 600px; 56 height: 300px; 57 } 58 59 #box-4 { 60 background: url(./images/sample.jpg) no-repeat center center; 61 /* 背景滑動固定 */ 62 background-attachment: fixed; 63 } 64 \u0026lt;/style\u0026gt; 65 \u0026lt;/head\u0026gt; 66 \u0026lt;body\u0026gt; 67 \u0026lt;div id=\u0026#34;box-1\u0026#34;\u0026gt; 68 \u0026lt;h3\u0026gt;box 1\u0026lt;/h3\u0026gt; 69 \u0026lt;p\u0026gt; 70 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 71 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 72 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 73 totam nulla? 74 \u0026lt;/p\u0026gt; 75 \u0026lt;/div\u0026gt; 76 \u0026lt;br /\u0026gt; 77 78 \u0026lt;div id=\u0026#34;box-2\u0026#34;\u0026gt; 79 \u0026lt;h3\u0026gt;box 2\u0026lt;/h3\u0026gt; 80 \u0026lt;p\u0026gt; 81 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 82 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 83 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 84 totam nulla? 85 \u0026lt;/p\u0026gt; 86 \u0026lt;/div\u0026gt; 87 88 \u0026lt;div id=\u0026#34;box-3\u0026#34;\u0026gt; 89 \u0026lt;h3\u0026gt;box 3\u0026lt;/h3\u0026gt; 90 \u0026lt;p\u0026gt; 91 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 92 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 93 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 94 totam nulla? 95 \u0026lt;/p\u0026gt; 96 \u0026lt;/div\u0026gt; 97 98 \u0026lt;div id=\u0026#34;box-4\u0026#34;\u0026gt; 99 \u0026lt;h3\u0026gt;box 4\u0026lt;/h3\u0026gt; 100 \u0026lt;p\u0026gt; 101 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 102 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 103 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 104 totam nulla? 105 \u0026lt;/p\u0026gt; 106 \u0026lt;p\u0026gt; 107 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 108 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 109 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 110 totam nulla? 111 \u0026lt;/p\u0026gt; 112 \u0026lt;p\u0026gt; 113 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 114 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 115 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 116 totam nulla? 117 \u0026lt;/p\u0026gt; 118 \u0026lt;p\u0026gt; 119 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 120 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 121 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 122 totam nulla? 123 \u0026lt;/p\u0026gt; 124 \u0026lt;p\u0026gt; 125 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 126 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 127 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 128 totam nulla? 129 \u0026lt;/p\u0026gt; 130 \u0026lt;p\u0026gt; 131 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 132 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 133 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 134 totam nulla? 135 \u0026lt;/p\u0026gt; 136 \u0026lt;p\u0026gt; 137 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 138 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 139 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 140 totam nulla? 141 \u0026lt;/p\u0026gt; 142 \u0026lt;p\u0026gt; 143 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 144 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 145 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 146 totam nulla? 147 \u0026lt;/p\u0026gt; 148 \u0026lt;p\u0026gt; 149 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 150 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 151 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 152 totam nulla? 153 \u0026lt;/p\u0026gt; 154 \u0026lt;p\u0026gt; 155 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 156 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 157 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 158 totam nulla? 159 \u0026lt;/p\u0026gt; 160 \u0026lt;p\u0026gt; 161 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 162 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 163 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 164 totam nulla? 165 \u0026lt;/p\u0026gt; 166 \u0026lt;p\u0026gt; 167 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 168 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 169 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 170 totam nulla? 171 \u0026lt;/p\u0026gt; 172 \u0026lt;p\u0026gt; 173 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 174 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 175 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 176 totam nulla? 177 \u0026lt;/p\u0026gt; 178 \u0026lt;p\u0026gt; 179 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 180 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 181 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 182 totam nulla? 183 \u0026lt;/p\u0026gt; 184 \u0026lt;p\u0026gt; 185 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 186 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 187 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 188 totam nulla? 189 \u0026lt;/p\u0026gt; 190 \u0026lt;p\u0026gt; 191 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 192 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 193 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 194 totam nulla? 195 \u0026lt;/p\u0026gt; 196 \u0026lt;p\u0026gt; 197 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 198 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 199 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 200 totam nulla? 201 \u0026lt;/p\u0026gt; 202 \u0026lt;p\u0026gt; 203 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 204 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 205 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 206 totam nulla? 207 \u0026lt;/p\u0026gt; 208 \u0026lt;p\u0026gt; 209 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 210 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 211 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 212 totam nulla? 213 \u0026lt;/p\u0026gt; 214 \u0026lt;p\u0026gt; 215 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 216 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 217 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 218 totam nulla? 219 \u0026lt;/p\u0026gt; 220 \u0026lt;p\u0026gt; 221 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 222 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 223 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 224 totam nulla? 225 \u0026lt;/p\u0026gt; 226 \u0026lt;p\u0026gt; 227 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 228 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 229 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 230 totam nulla? 231 \u0026lt;/p\u0026gt; 232 \u0026lt;p\u0026gt; 233 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 234 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 235 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 236 totam nulla? 237 \u0026lt;/p\u0026gt; 238 \u0026lt;p\u0026gt; 239 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 240 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 241 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 242 totam nulla? 243 \u0026lt;/p\u0026gt; 244 \u0026lt;p\u0026gt; 245 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 246 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 247 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 248 totam nulla? 249 \u0026lt;/p\u0026gt; 250 \u0026lt;p\u0026gt; 251 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 252 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 253 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 254 totam nulla? 255 \u0026lt;/p\u0026gt; 256 \u0026lt;p\u0026gt; 257 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 258 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 259 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 260 totam nulla? 261 \u0026lt;/p\u0026gt; 262 \u0026lt;p\u0026gt; 263 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 264 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 265 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 266 totam nulla? 267 \u0026lt;/p\u0026gt; 268 \u0026lt;p\u0026gt; 269 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 270 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 271 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 272 totam nulla? 273 \u0026lt;/p\u0026gt; 274 \u0026lt;p\u0026gt; 275 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 276 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 277 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 278 totam nulla? 279 \u0026lt;/p\u0026gt; 280 \u0026lt;p\u0026gt; 281 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 282 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 283 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 284 totam nulla? 285 \u0026lt;/p\u0026gt; 286 \u0026lt;p\u0026gt; 287 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 288 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 289 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 290 totam nulla? 291 \u0026lt;/p\u0026gt; 292 \u0026lt;p\u0026gt; 293 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 294 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 295 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 296 totam nulla? 297 \u0026lt;/p\u0026gt; 298 \u0026lt;p\u0026gt; 299 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 300 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 301 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 302 totam nulla? 303 \u0026lt;/p\u0026gt; 304 \u0026lt;p\u0026gt; 305 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 306 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 307 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 308 totam nulla? 309 \u0026lt;/p\u0026gt; 310 \u0026lt;p\u0026gt; 311 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 312 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 313 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 314 totam nulla? 315 \u0026lt;/p\u0026gt; 316 \u0026lt;p\u0026gt; 317 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 318 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 319 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 320 totam nulla? 321 \u0026lt;/p\u0026gt; 322 \u0026lt;p\u0026gt; 323 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 324 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 325 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 326 totam nulla? 327 \u0026lt;/p\u0026gt; 328 \u0026lt;p\u0026gt; 329 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 330 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 331 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 332 totam nulla? 333 \u0026lt;/p\u0026gt; 334 \u0026lt;p\u0026gt; 335 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 336 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 337 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 338 totam nulla? 339 \u0026lt;/p\u0026gt; 340 \u0026lt;p\u0026gt; 341 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 342 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 343 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 344 totam nulla? 345 \u0026lt;/p\u0026gt; 346 \u0026lt;p\u0026gt; 347 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 348 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 349 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 350 totam nulla? 351 \u0026lt;/p\u0026gt; 352 \u0026lt;p\u0026gt; 353 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 354 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 355 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 356 totam nulla? 357 \u0026lt;/p\u0026gt; 358 \u0026lt;p\u0026gt; 359 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 360 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 361 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 362 totam nulla? 363 \u0026lt;/p\u0026gt; 364 \u0026lt;p\u0026gt; 365 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 366 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 367 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 368 totam nulla? 369 \u0026lt;/p\u0026gt; 370 \u0026lt;p\u0026gt; 371 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 372 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 373 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 374 totam nulla? 375 \u0026lt;/p\u0026gt; 376 \u0026lt;p\u0026gt; 377 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 378 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 379 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 380 totam nulla? 381 \u0026lt;/p\u0026gt; 382 \u0026lt;p\u0026gt; 383 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 384 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 385 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 386 totam nulla? 387 \u0026lt;/p\u0026gt; 388 \u0026lt;p\u0026gt; 389 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 390 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 391 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 392 totam nulla? 393 \u0026lt;/p\u0026gt; 394 \u0026lt;p\u0026gt; 395 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 396 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 397 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 398 totam nulla? 399 \u0026lt;/p\u0026gt; 400 \u0026lt;p\u0026gt; 401 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 402 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 403 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 404 totam nulla? 405 \u0026lt;/p\u0026gt; 406 \u0026lt;p\u0026gt; 407 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 408 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 409 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 410 totam nulla? 411 \u0026lt;/p\u0026gt; 412 \u0026lt;p\u0026gt; 413 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 414 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 415 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 416 totam nulla? 417 \u0026lt;/p\u0026gt; 418 \u0026lt;p\u0026gt; 419 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 420 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 421 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 422 totam nulla? 423 \u0026lt;/p\u0026gt; 424 \u0026lt;p\u0026gt; 425 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 426 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 427 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 428 totam nulla? 429 \u0026lt;/p\u0026gt; 430 \u0026lt;p\u0026gt; 431 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 432 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 433 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 434 totam nulla? 435 \u0026lt;/p\u0026gt; 436 \u0026lt;p\u0026gt; 437 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 438 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 439 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 440 totam nulla? 441 \u0026lt;/p\u0026gt; 442 \u0026lt;p\u0026gt; 443 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 444 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 445 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 446 totam nulla? 447 \u0026lt;/p\u0026gt; 448 \u0026lt;p\u0026gt; 449 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 450 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 451 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 452 totam nulla? 453 \u0026lt;/p\u0026gt; 454 \u0026lt;p\u0026gt; 455 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 456 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 457 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 458 totam nulla? 459 \u0026lt;/p\u0026gt; 460 \u0026lt;p\u0026gt; 461 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 462 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 463 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 464 totam nulla? 465 \u0026lt;/p\u0026gt; 466 \u0026lt;p\u0026gt; 467 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 468 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 469 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 470 totam nulla? 471 \u0026lt;/p\u0026gt; 472 \u0026lt;p\u0026gt; 473 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 474 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 475 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 476 totam nulla? 477 \u0026lt;/p\u0026gt; 478 \u0026lt;p\u0026gt; 479 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 480 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 481 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 482 totam nulla? 483 \u0026lt;/p\u0026gt; 484 \u0026lt;p\u0026gt; 485 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 486 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 487 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 488 totam nulla? 489 \u0026lt;/p\u0026gt; 490 \u0026lt;p\u0026gt; 491 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 492 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 493 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 494 totam nulla? 495 \u0026lt;/p\u0026gt; 496 \u0026lt;p\u0026gt; 497 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 498 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 499 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 500 totam nulla? 501 \u0026lt;/p\u0026gt; 502 \u0026lt;p\u0026gt; 503 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 504 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 505 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 506 totam nulla? 507 \u0026lt;/p\u0026gt; 508 \u0026lt;p\u0026gt; 509 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 510 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 511 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 512 totam nulla? 513 \u0026lt;/p\u0026gt; 514 \u0026lt;p\u0026gt; 515 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 516 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 517 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 518 totam nulla? 519 \u0026lt;/p\u0026gt; 520 \u0026lt;p\u0026gt; 521 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 522 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 523 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 524 totam nulla? 525 \u0026lt;/p\u0026gt; 526 \u0026lt;p\u0026gt; 527 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 528 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 529 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 530 totam nulla? 531 \u0026lt;/p\u0026gt; 532 \u0026lt;p\u0026gt; 533 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 534 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 535 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 536 totam nulla? 537 \u0026lt;/p\u0026gt; 538 \u0026lt;p\u0026gt; 539 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 540 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 541 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 542 totam nulla? 543 \u0026lt;/p\u0026gt; 544 \u0026lt;p\u0026gt; 545 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 546 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 547 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 548 totam nulla? 549 \u0026lt;/p\u0026gt; 550 \u0026lt;p\u0026gt; 551 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 552 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 553 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 554 totam nulla? 555 \u0026lt;/p\u0026gt; 556 \u0026lt;p\u0026gt; 557 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 558 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 559 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 560 totam nulla? 561 \u0026lt;/p\u0026gt; 562 \u0026lt;p\u0026gt; 563 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 564 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 565 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 566 totam nulla? 567 \u0026lt;/p\u0026gt; 568 \u0026lt;p\u0026gt; 569 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 570 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 571 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 572 totam nulla? 573 \u0026lt;/p\u0026gt; 574 \u0026lt;p\u0026gt; 575 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 576 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 577 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 578 totam nulla? 579 \u0026lt;/p\u0026gt; 580 \u0026lt;p\u0026gt; 581 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 582 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 583 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 584 totam nulla? 585 \u0026lt;/p\u0026gt; 586 \u0026lt;p\u0026gt; 587 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 588 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 589 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 590 totam nulla? 591 \u0026lt;/p\u0026gt; 592 \u0026lt;p\u0026gt; 593 Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ratione 594 earum esse? Ullam, enim vitae necessitatibus tenetur fugiat incidunt 595 pariatur excepturi earum impedit deleniti nemo, quidem quisquam illo 596 totam nulla? 597 \u0026lt;/p\u0026gt; 598 \u0026lt;/div\u0026gt; 599 \u0026lt;/body\u0026gt; 600\u0026lt;/html\u0026gt; 上一篇CSS 顏色 | 前端基礎教學17\n下一篇CSS 盒模型盒內外邊距 | 前端基礎教學19\n","link":"https://benzhub.github.io/post/frontend-basic/18/","section":"post","tags":["html","css"],"title":"CSS 背景和邊框 | 前端基礎教學18"},{"body":"","link":"https://benzhub.github.io/tags/django/","section":"tags","tags":null,"title":"Django"},{"body":"","link":"https://benzhub.github.io/categories/django-%E6%95%99%E5%AD%B8%E7%B3%BB%E5%88%97/","section":"categories","tags":null,"title":"Django 教學系列"},{"body":"views.py 與 urls.py的作用與關係 在django中urls.py主要設定路由 在django中views.py負責主要邏輯工作 \u0026lt;your app name\u0026gt;/urls.py 1from django.urls import path 2from . import views 3 4 5urlpatterns = [ 6 # 代表請求http://localhost/projects/時，會由views.projects負責處理 7 path(\u0026#39;projects/\u0026#39;, views.projects, name=\u0026#34;projects\u0026#34;), 8 # \u0026lt;str:pk\u0026gt;，代表輸入值pk是變數(但型別必須是string) 9 path(\u0026#39;project/\u0026lt;str:pk\u0026gt;\u0026#39;, views.project, name=\u0026#34;project\u0026#34;), 10] \u0026lt;your app name\u0026gt;/views.app 1from django.shortcuts import render 2from django.http import HttpResponse 3 4# 瀏覽器請求 http://localhost/projects/時，返回 Here are our products 5def projects(request): 6 return HttpResponse(\u0026#34;Here are our products\u0026#34;) 7 8# 瀏覽器請求 http://localhost/project/test1234 時，返回 SINGLE PROJECT: test1234 9def project(request, pk): 10 return HttpResponse(f\u0026#34;SINGLE PROJECT: {str(pk)}\u0026#34;) \u0026lt;your project name\u0026gt;/urls.py 在專案的主urls.py include進app的urls.py 1from django.contrib import admin 2from django.urls import path, include 3 4urlpatterns = [ 5 path(\u0026#39;admin/\u0026#39;, admin.site.urls), 6 path(\u0026#39;\u0026#39;, include(\u0026#39;projects.urls\u0026#39;)) 7 8] 上一篇 安裝與設定Django | Django 教學系列02\n下一篇 ","link":"https://benzhub.github.io/post/django/03/","section":"post","tags":["Django","python"],"title":"views \u0026 urls | Django 教學系列03"},{"body":"Python while 迴圈 1# 無限迴圈，按下 Ctrl+C 或 Ctrl+D 可以強制結束 2while 1 == 1: 3 print(\u0026#34;糟糕! 我被困在無限迴圈裡面了!!\u0026#34;) 4 5name = None 6 7# 輸入不為空值的時候，迴圈才會結束 8while not name: 9 name = input(\u0026#34;請輸入你的名字: \u0026#34;) 10 11print(\u0026#34;Hello \u0026#34; + name) 上一篇 Python 邏輯操作 | Python 教學系列10\n下一篇 Python for 迴圈 | Python 教學系列12\n","link":"https://benzhub.github.io/post/python/11/","section":"post","tags":["Python"],"title":"Python while 迴圈 | Python 教學系列11"},{"body":" 1# 安裝虛擬環境 2python3 -m pip virtualenv 3 4# 創建虛擬環境 5virtualenv \u0026lt;your env name\u0026gt; 6 7# 啟動虛擬環境 8\u0026lt;your env name\u0026gt;/scripts/activate 9 10# 退出虛擬環境 11deactivate 12 13# 安裝django 14python -m pip install django 15 16# 查看django版本 17python -m pip list 18 19# django 交互令命模式 20django-admin 21 22# 創建django 專案 23django-admin startproject \u0026lt;your project name\u0026gt; 24 25# 進入專案 26cd \u0026lt;your project name\u0026gt; 27 28# 開啟開發者模式 29python manage.py runserver 30 31# 創建新的app 32python manage.py startapp \u0026lt;your app name\u0026gt; 安裝Python 新創建的app在settings.py中設定加入 ./\u0026lt;your project name\u0026gt;/settings.py\n1INSTALLED_APPS = [ 2 \u0026#39;django.contrib.admin\u0026#39;, 3 \u0026#39;django.contrib.auth\u0026#39;, 4 \u0026#39;django.contrib.contenttypes\u0026#39;, 5 \u0026#39;django.contrib.sessions\u0026#39;, 6 \u0026#39;django.contrib.messages\u0026#39;, 7 \u0026#39;django.contrib.staticfiles\u0026#39;, 8 \u0026#39;\u0026lt;your app name\u0026gt;.apps.ProjectsConfig\u0026#39;, 9] Django 專案與app關係架構 上一篇 什麼是Django | Django 教學系列01\n下一篇 views \u0026amp; urls | Django 教學系列03\n","link":"https://benzhub.github.io/post/django/02/","section":"post","tags":["Django","python"],"title":"安裝與設定Django | Django 教學系列02"},{"body":"Python 邏輯操作 1temp = int(input(\u0026#34;外面的氣溫現在是幾度?: \u0026#34;)) 2 3if temp \u0026gt;= 0 and temp \u0026lt;= 30: 4 print(\u0026#34;今天是個好天氣\u0026#34;) 5 print(\u0026#34;適合去戶外走走!\u0026#34;) 6elif not (temp \u0026gt; -50 and temp \u0026gt; 50): 7 print(\u0026#34;這個溫度不太正常喔!!\u0026#34;) 8 print(\u0026#39;請再輸入一次!\u0026#39;) 9elif temp \u0026lt; 0 or temp \u0026gt; 30: 10 print(\u0026#34;今天是個壞天氣!\u0026#34;) 11 print(\u0026#34;我們還是待在家裡吧!\u0026#34;) 上一篇 Python if else 使用 | Python 教學系列09\n下一篇 Python while 迴圈 | Python 教學系列11\n","link":"https://benzhub.github.io/post/python/10/","section":"post","tags":["Python"],"title":"Python 邏輯操作 | Python 教學系列10"},{"body":"什麼是Django Django是Python中一款企業級的web框架 一款Server Side Framework 讓你快速設計，快速啟用專案 MVT設計架構 自帶齊全的庫及套件，直接拿來用，不用再自行開發 其他python的web framework flask cherry pie web2py pyramid 使用Django的公司 Django 採用MVT架構 下一篇 什麼是Django | Django 教學系列2\n","link":"https://benzhub.github.io/post/django/01/","section":"post","tags":["Django","python"],"title":"什麼是Django | Django 教學系列01"},{"body":"Python if else 使用 1money = int(input(\u0026#34;你有多少存款?: \u0026#34;)) 2 3if money == 1000000: 4 print(\u0026#34;你是個百萬富翁\u0026#34;) 5elif age \u0026gt;= 10000000: 6 print(\u0026#34;哇～你是個千萬富翁\u0026#34;) 7elif age \u0026lt; 10000: 8 print(\u0026#34;ㄟ～你可能要多加油囉\u0026#34;) 9else: 10 print(\u0026#34;加油，退休離你不遠了\u0026#34;) 上一篇 Python 字串切片 | Python 教學系列08\n下一篇 Python 邏輯操作 | Python 教學系列10\n","link":"https://benzhub.github.io/post/python/09/","section":"post","tags":["Python"],"title":"Python if else 使用 | Python 教學系列09"},{"body":"Python 字串切片 1name = \u0026#34;BenzHub\u0026#34; 2 3# [start:stop:step] 4# 取index第0個到第3個之後到最後的 5first_name = name[:3] # first_name = name[0:3] 6# 取index第4個之後到最後的 7last_name = name[4:] # last_name = name[4:9] 8# 取index每隔3個的 9funky_name = name[::3] # funky_name = name[0:9:3] 10# 反向 11reversed_name = name[::-1] 12 13print(first_name) # Ben 14print(last_name) # Hub 15print(funky_name) # Bzb # index第0, 3, 6 16print(reversed_name) # buHzneB 17 18website = \u0026#34;http://google.com\u0026#34; 19website2 = \u0026#34;http://wikipedia.com\u0026#34; 20slice = slice(7, -4) 21print(website[slice]) # google 22print(website2[slice]) # wikipedia 上一篇 Python 數學計算函式 | Python 教學系列07\n下一篇 Python if else 使用 | Python 教學系列09\n","link":"https://benzhub.github.io/post/python/08/","section":"post","tags":["Python"],"title":"Python 字串切片 | Python 教學系列08"},{"body":"Python 數學計算函式 1import math 2 3pi = 3.14 4pi2 = -3.54 5 6x = 1 7y = 2 8z = 3 9 10# 整數四捨五入 11print(round(pi)) # 3 12print(round(pi2)) # -4 13# 無條件進位 14print(math.ceil(pi)) # 4 15# 無條件捨去 16print(math.floor(pi)) # 3 17# 強制轉換為絕對值(一定是正數) 18print(abs(pi)) # 3.14 19print(abs(pi2)) # 3.14 20# 次方 21print(pow(pi, 2)) # 9.8596 (pi的2次方) 22print(pow(pi2, 4)) # 157.04099856000002 (pi2的4次方) 23# 平方根 24print(math.sqrt(420)) # 20.493901531919196 25print(pow(20.493901531919196, 2)) # 419.99999999999994 (20.493901531919196的2次方) 26# 取得最大值 27print(max(x, y, z)) # 3 28# 取得最小值 29print(min(x, y, z)) # 1 上一篇 Python 使用者輸入 | Python 教學系列06\n下一篇 Python 字串切片 | Python 教學系列08\n","link":"https://benzhub.github.io/post/python/07/","section":"post","tags":["Python"],"title":"Python 數學計算函式 | Python 教學系列07"},{"body":"Python 使用者輸入 1name = input(\u0026#34;你的名字是?: \u0026#34;) 2age = input(\u0026#34;你的年齡是?:\u0026#34;) 3height = float(input(\u0026#34;你的身高是?\u0026#34;)) 4 5# 因為input的類型是string，所以需要轉換成int 6age = int(age) + 1 7 8print(\u0026#34;Hello \u0026#34; + name) 9print(\u0026#34;你的年齡是: \u0026#34; + str(age)) 10print(\u0026#34;你的身高是: \u0026#34; + str(height) + \u0026#34; cm\u0026#34;) 上一篇 Python 類型轉換 | Python 教學系列05\n下一篇 Python 數學計算函式 | Python 教學系列07\n","link":"https://benzhub.github.io/post/python/06/","section":"post","tags":["Python"],"title":"Python 使用者輸入 | Python 教學系列06"},{"body":" https://html-color-codes.info/chinese/ https://color-hex/com/ 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;CSS顏色\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 /* https://html-color-codes.info/chinese/ */ 10 /* https://color-hex/com/ */ 11 h1 { 12 /* 字體顏色 */ 13 /* 顏色命名 */ 14 color: blueviolet; 15 } 16 h2 { 17 /* RGB三原色搭配 */ 18 /* red */ 19 color: rgb(255, 0, 0); 20 /* green */ 21 color: rgb(0, 255, 0); 22 /* blue */ 23 color: rgb(0, 0, 255); 24 /* white */ 25 color: rgb(255, 255, 255); 26 /* black */ 27 color: rgb(0, 0, 0); 28 } 29 h3 { 30 /* 16進制色碼 Hex */ 31 /* red */ 32 color: #ff0000; 33 /* white */ 34 color: #ffffff; 35 /* black */ 36 color: #000000; 37 /* green */ 38 color: #00ff00; 39 /* blue */ 40 color: #0000ff; 41 /* white 如果其中有0的話，可以進行刪減 */ 42 color: #fff; 43 /* gray white mix */ 44 color: #f4f4f4; 45 } 46 \u0026lt;/style\u0026gt; 47 \u0026lt;/head\u0026gt; 48 \u0026lt;body\u0026gt; 49 \u0026lt;h1\u0026gt;標題1\u0026lt;/h1\u0026gt; 50 \u0026lt;h2\u0026gt;標題2\u0026lt;/h2\u0026gt; 51 \u0026lt;h3\u0026gt;標題3\u0026lt;/h3\u0026gt; 52 \u0026lt;/body\u0026gt; 53\u0026lt;/html\u0026gt; 上一篇字體屬性 | 前端基礎教學16\n下一篇CSS 背景和邊框 | 前端基礎教學18\n","link":"https://benzhub.github.io/post/frontend-basic/17/","section":"post","tags":["html","css"],"title":"CSS 顏色 | 前端基礎教學17"},{"body":"Python 類型轉換 1x = 1 #int 整數 2y = 2.0 #float 浮點數(小數) 3z = \u0026#34;3\u0026#34; #string (字串) 4 5print(int(y)) # 2 6print(int(z) * 3) # 9 7print(float(x)) # 1.0 8 9print(\u0026#34;X is \u0026#34; + str(x)) # X is 1 10print(\u0026#34;Y is \u0026#34; + str(int(y))) # Y is 2 上一篇 Python 字串方法 | Python 教學系列04\n下一篇 Python 使用者輸入 | Python 教學系列06\n","link":"https://benzhub.github.io/post/python/05/","section":"post","tags":["Python"],"title":"Python 類型轉換 | Python 教學系列05"},{"body":"Python 字串方法 1name = \u0026#34;Benz Hub\u0026#34; 2name2 = \u0026#34;1234\u0026#34; 3name3 = \u0026#34;BenzHub\u0026#34; 4 5# name的長度 6print(len(name)) 7# 搜尋B在name中的index 8print(name.find(\u0026#34;B\u0026#34;)) 9# 第一個單字大寫，其餘全部都變成小寫 10print(name.capitalize()) 11# 全部變成大寫 12print(name.upper()) 13# 全部變成小寫 14print(name.lower()) 15# 字串裡的值是否是數字 16print(name.isdigit()) # False 17print(name2.isdigit()) # True 18# 檢查字串裡面是否只包含英文字母 19print(name.isalpha()) # False 20print(name2.isalpha()) # False 21print(name3.isalpha()) # True 22# 檢查字串裡面有多少指定字母 23print(name.count(\u0026#34;e\u0026#34;)) # 1 24# 取代字串裡面指定的字母 25print(name.replace(\u0026#34;e\u0026#34;, \u0026#34;a\u0026#34;)) # Ban Hub 26print((name + \u0026#34; \u0026#34;) * 3) # Benz Hub Benz Hub Benz Hub 上一篇 Python 多重賦值 | Python 教學系列03\n下一篇 Python 類型轉換 | Python 教學系列05\n","link":"https://benzhub.github.io/post/python/04/","section":"post","tags":["Python"],"title":"Python 字串方法 | Python 教學系列04"},{"body":"Google字體 https://googlefonts.cn CSS 絕對單位 cm 釐米 mm 毫米 inches 英吋 px 像素 (1px = 1/96inches) pt 點數 (1pt = 1/72inches) pc 派卡 (1pc=12pt) html會有多個父元素，但只會有一個根元素\nhtml 默認的font-size是16px\nem: 1.5 = 16px * 1.5(只會找最鄰近的父元素)\nCSS 絕對單位 % 針對父元素 em 針對父元素的font-size rem 針對根元素的font-size vw 視當前螢幕寬度的1% vh 視當前螢幕高度的1% index.html 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;字體屬性\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 body { 10 font-family: Arial, Helvetica, sans-serif; 11 font-size: 18px; 12 line-height: 1.6em; 13 } 14 #welcome p span { 15 /* 字體加粗 */ 16 font-weight: bold; 17 } 18 #about p span { 19 font-style: italic; 20 } 21 \u0026lt;/style\u0026gt; 22 \u0026lt;/head\u0026gt; 23 \u0026lt;body\u0026gt; 24 \u0026lt;div id=\u0026#34;welcome\u0026#34;\u0026gt; 25 \u0026lt;h2 class=\u0026#34;primary-heading\u0026#34;\u0026gt;歡迎來到我的Blog\u0026lt;/h2\u0026gt; 26 \u0026lt;p\u0026gt; 27 Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odit possimus 28 eius voluptatem suscipit 29 \u0026lt;span\u0026gt;libero aliquam fugit voluptas delectus quia animi voluptatum\u0026lt;/span 30 \u0026gt;, perferendis rerum ut ducimus mollitia voluptatibus earum neque eum. 31 \u0026lt;/p\u0026gt; 32 \u0026lt;/div\u0026gt; 33 \u0026lt;div id=\u0026#34;about\u0026#34;\u0026gt; 34 \u0026lt;h2\u0026gt;關於我們\u0026lt;/h2\u0026gt; 35 \u0026lt;p\u0026gt; 36 Lorem ipsum dolor sit amet consectetur adipisicing elit. Minus 37 blanditiis suscipit 38 \u0026lt;span 39 \u0026gt;nihil ratione libero, eum excepturi enim nulla. Accusamus amet 40 veniam\u0026lt;/span 41 \u0026gt; 42 consequuntur hic doloremque vel ipsa ab voluptas, provident dolorum? 43 \u0026lt;/p\u0026gt; 44 \u0026lt;/div\u0026gt; 45 \u0026lt;/body\u0026gt; 46\u0026lt;/html\u0026gt; 上一篇基礎的CSS選擇器 | 前端基礎教學15\n下一篇CSS 顏色 | 前端基礎教學17\n","link":"https://benzhub.github.io/post/frontend-basic/16/","section":"post","tags":["html","css"],"title":"字體屬性 | 前端基礎教學16"},{"body":"Python 多重賦值 1name = \u0026#34;Ben\u0026#34; 2age = 21 3attractive = True 4# 簡化為一行賦值 5name, age, attractive = \u0026#34;Ben\u0026#34;, 21, True 6 7print(name) 8print(age) 9print(attractive) 10 11Bob = 30 12Kim = 30 13Sandy = 30 14Andy = 30 15# 簡化為一行賦值 16Andy = Sandy = Kim = Bob = 30 17 18print(Andy) 19print(Sandy) 20print(Kim) 21print(Bob) 上一篇 Python 變量 | Python 教學系列02\n下一篇 Python 字串方法 | Python 教學系列04\n","link":"https://benzhub.github.io/post/python/03/","section":"post","tags":["Python"],"title":"Python 多重賦值 | Python 教學系列03"},{"body":"index.html 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;基本的CSS選擇器\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 /* 元素選擇器 */ 10 body { 11 background-color: #333; 12 } 13 14 /* #是ID選擇器 */ 15 #about { 16 background-color: #ffffff; 17 } 18 19 #welcome { 20 background-color: #f4f4f4; 21 } 22 /* .是類選擇器 */ 23 .primary-heading { 24 color: green; 25 } 26 /* 多項選擇器 */ 27 #welcome, 28 #about { 29 border: 1px solid #ccc; 30 padding: 10px; 31 margin-bottom: 5px; 32 } 33 /* 嵌套選擇器 */ 34 #welcome p { 35 font-size: 20px; 36 } 37 \u0026lt;/style\u0026gt; 38 \u0026lt;/head\u0026gt; 39 \u0026lt;body\u0026gt; 40 \u0026lt;div id=\u0026#34;welcome\u0026#34;\u0026gt; 41 \u0026lt;h2 class=\u0026#34;primary-heading\u0026#34;\u0026gt;歡迎來到我的blog\u0026lt;/h2\u0026gt; 42 \u0026lt;p\u0026gt; 43 Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellat 44 quaerat labore assumenda voluptatem dolorem qui corporis tempora, minus 45 velit praesentium est. Unde fugit at temporibus cupiditate adipisci 46 voluptates enim nesciunt! 47 \u0026lt;/p\u0026gt; 48 \u0026lt;/div\u0026gt; 49 \u0026lt;div id=\u0026#34;about\u0026#34;\u0026gt; 50 \u0026lt;h2\u0026gt;關於我們\u0026lt;/h2\u0026gt; 51 \u0026lt;p\u0026gt; 52 Lorem ipsum, dolor sit amet consectetur adipisicing elit. Magni minus 53 nostrum rerum, qui doloremque quam quia optio numquam, vitae, itaque 54 exercitationem quas dolore eius aspernatur quis doloribus voluptatum 55 ducimus perferendis? 56 \u0026lt;/p\u0026gt; 57 \u0026lt;/div\u0026gt; 58 \u0026lt;/body\u0026gt; 59\u0026lt;/html\u0026gt; 上一篇CSS引入方式 | 前端基礎教學14\n下一篇字體屬性 | 前端基礎教學16\n","link":"https://benzhub.github.io/post/frontend-basic/15/","section":"post","tags":["html","css"],"title":"基礎的CSS選擇器 | 前端基礎教學15"},{"body":"index.html 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;CSS引入\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 /* 內部樣式 */ 10 h2 { 11 color: green; 12 } 13 \u0026lt;/style\u0026gt; 14 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;./css/style.css\u0026#34; /\u0026gt; 15 \u0026lt;/head\u0026gt; 16 \u0026lt;body\u0026gt; 17 \u0026lt;!-- 內聯樣式(不推薦使用) --\u0026gt; 18 \u0026lt;h1 style=\u0026#34;color: red\u0026#34;\u0026gt;標題一\u0026lt;/h1\u0026gt; 19 \u0026lt;h2\u0026gt;標題二\u0026lt;/h2\u0026gt; 20 \u0026lt;h3\u0026gt;標題三\u0026lt;/h3\u0026gt; 21 \u0026lt;/body\u0026gt; 22\u0026lt;/html\u0026gt; ./css/style.css 1/* 外部樣式 */ 2h3 { 3 color: orange; 4} 上一篇HTML5語意化標籤 | 前端基礎教學13\n下一篇基礎的CSS選擇器 | 前端基礎教學15\n","link":"https://benzhub.github.io/post/frontend-basic/14/","section":"post","tags":["html","css"],"title":"CSS引入方式 | 前端基礎教學14"},{"body":"Python 變量 1 2# string 字串 3name = \u0026#34;Ben\u0026#34; 4print(type(name)) 5print(\u0026#34;Hello \u0026#34; + name) 6 7first_name = \u0026#34;Ben\u0026#34; 8last_name = \u0026#34;Chang\u0026#34; 9full_name = first_name + last_name 10print(\u0026#34;Hello \u0026#34; + full_name) 11 12# integer 整數 13age = 21 14age = 21 + 1 # =\u0026gt; age += 1 15print(type(age)) 16# 不同的類型的變數要相加的時候，要轉成相同類型 17print(\u0026#34;Hello \u0026#34; + str(age)) 18 19# float 浮點數(小數) 20height = 250.5 21print(type(height)) 22print(\u0026#34;Your height is: \u0026#34; + str(height) + \u0026#34;cm\u0026#34;) 23 24# boolean 布林值(True or False) 25human = True 26print(type(human)) 27print(\u0026#34;Are you a human: \u0026#34; + str(human)) 上一篇 Python 安裝 | Python 教學系列01\n下一篇 Python 多重賦值 | Python 教學系列03\n","link":"https://benzhub.github.io/post/python/02/","section":"post","tags":["Python"],"title":"Python 變量 | Python 教學系列02"},{"body":"安裝 Python https://www.python.org/ Pycharm是非常適合編寫Python的IDE https://www.jetbrains.com/pycharm/download/#section=mac 你的第一支Python 程式 1print(\u0026#34;I love Python.\u0026#34;) 2print(\u0026#34;I want to be a programmer\u0026#34;) 下一篇 Python 變量 | Python 教學系列02\n","link":"https://benzhub.github.io/post/python/01/","section":"post","tags":["Python"],"title":"Python 安裝 | Python 教學系列01"},{"body":"Contact Info Email : lenrich1403@gmail.com\n","link":"https://benzhub.github.io/contact/","section":"","tags":null,"title":""},{"body":"","link":"https://benzhub.github.io/tags/flask%E5%85%A5%E9%96%80/","section":"tags","tags":null,"title":"flask入門"},{"body":"","link":"https://benzhub.github.io/categories/flask%E5%85%A5%E9%96%80/","section":"categories","tags":null,"title":"flask入門"},{"body":"Flask入門\u0026amp;\u0026amp;安裝 Flask是Python中一款輕量級的web框架,它比起另外一套Django更為自由 非常適合用來開發小專案或是要高度自定義的情況 這次我們會用Python Flask 來打造我們的 Restful API 1#新建一個main.py檔案 2sudo touch main.py 3#使用pip安裝Flask 4python -m pip install Flask 我們的第一支Flask程式 1from flask import Flask 2 3app = Flask(__name__) 4 5@app.route(\u0026#39;/\u0026#39;) 6def index(): 7 return \u0026#34;hello world XD\u0026#34; 8 9if __name__ == \u0026#39;__main__\u0026#39;: 10 app.debug = True 11 app.run(host = \u0026#39;0.0.0.0\u0026#39;, port = 8000) 啟動 1python main.py 我們到http://localhost:8000/ 上面就可以看到我們的hello world XD 代表你成功完了第一支Python Flask 的程式了 下一篇 ","link":"https://benzhub.github.io/post/flask/1/","section":"post","tags":["flask入門","python"],"title":"flask入門 | Flask-Restful API 教學系列01"},{"body":"","link":"https://benzhub.github.io/tags/docker/","section":"tags","tags":null,"title":"docker"},{"body":"docker compose的Services使用介紹 創建docker-compose 的設定檔案 1touch docker-compose.yml 寫入設定檔案內容 1version:\u0026#34;3.7\u0026#34; 2services: 3 myweb: 4 build: 5 context: . 6 args: 7 whoami:\u0026#34;Git\u0026#34; 8 image:lenrich1403/nginx:latest 9 ports: 10 - \u0026#34;8080:80\u0026#34; 11 networks: 12 - mybridge001 13 myweb2: 14 build: 15 context: . 16 args: 17 whoami:\u0026#34;Nginx\u0026#34; 18 image:lenrich1403/nginx2:latest 19 ports: 20 - \u0026#34;8081:80\u0026#34; 21 networks: 22 - mybridge001 23 myweb3: 24 build: 25 context: . 26 args: 27 whoami:\u0026#34;Laravel\u0026#34; 28 image:lenrich1403/nginx3:latest 29 ports: 30 - \u0026#34;8082:80\u0026#34; 31 networks: 32 - mybridge001 33 myweb4: 34 image:lenrich1403/nginx3:latest 35 ports: 36 - \u0026#34;8083:80\u0026#34; 37 networks: 38 - mybridge002 39 myweb5: 40 image:lenrich1403/nginx3:latest 41 ports: 42 - \u0026#34;8084:80\u0026#34; 43 networks: 44 - mybridge002 45 volumes: 46 - main-vol002:/etc/nginx 47 48networks: 49 mybridge001: 50 mybridge002: 51 52volumes: 53 main-vol002: docker-compose建立 1sudo docker-compose build --no-cache 2#用docker-compose 背景執行啟動 3sudo docker-compose up -d 4#刪除/下架所有用docker-compose啟動的container 5sudo docker-compose down 上一篇 docker volume的介紹 | Docker 教學系列06\n","link":"https://benzhub.github.io/post/docker/7/","section":"post","tags":["docker"],"title":"docker compose的使用介紹 | Docker 教學系列07"},{"body":"","link":"https://benzhub.github.io/categories/docker%E6%95%99%E5%AD%B8%E7%B3%BB%E5%88%97/","section":"categories","tags":null,"title":"Docker教學系列"},{"body":"","link":"https://benzhub.github.io/tags/docker-compose/","section":"tags","tags":null,"title":"docker compose"},{"body":"docker volume的介紹 1#查看我們有哪些volume 2sudo docker volume ls 3#建立volume 4sudo docker volume create volume-test 5#查看volume-test細部資訊 6sudo docker volume inspect volume-test 7#使用volume mapping Linux VM 和 container的資料夾 8sudo docker run -d -p 8080:80 -v volume-test:/var/www/localhost/htdocs alpine tail -f /dev/null 上一篇 docker container 網路模式介紹 | Docker 教學系列05\n下一篇 ","link":"https://benzhub.github.io/post/docker/6/","section":"post","tags":["docker","docker compose"],"title":"docker volume的介紹 | Docker 教學系列06"},{"body":"docker container 網路模式介紹 None模式:container 不能向外連線網路,外面也不能連線進去 Bridge模式:container 啟動的時候,我們會把container 放到設定的bridge network中 Container模式:啟動的container會複製已有的container的網路模式 Host模式:啟動的container我們會它放到設定的Linux VM network 中 1# 列出我們所擁有的network 2sudo docker network ls 3 4# none 模式 5sudo docker run -d --network null --name none-model alpine tail -f /dev/null 6#查看none模式的網路界面 7sudo docker network inspect none 8#創建屬於自己的bridge網路 9sudo docker network create --dirver bridge my-bridge 10#查看my-bridge模式的網路界面,並記下Subnet的ip 11sudo docker network inspect my-bridge 12#建立屬於my-bridge網路的container 13sudo docker run -d --network my-bridge --name my-bridge-test01 alpine tail -f /dev/null 14#再次檢查,會發現my-bridge-test在my-bridge網路中 15sudo docker network inspect my-bridge 16#不同的netword bridge 連線, 會將container 在不同的bridge 網路中各自分配給它ip 17sudo docker network connect my-bridge my-bridge-test02 18#container模式,會去複製現有的container的網路設定 19sudo docker run -d --name container-mode-test01 --network container:my-bridge-test01 alpine tail -f /dev/null 20#host模式,會將啟動的container 跟Linux host 要求分配一個 ip給它 21sudo docker run -d --name host-alpine --network host alpine tail -f /dev/null 上一篇 Dockerfile基本操作 | Docker 教學系列04\n下一篇 docker volume的介紹 | Docker 教學系列06\n","link":"https://benzhub.github.io/post/docker/5/","section":"post","tags":["docker"],"title":"docker container 網路模式介紹 | Docker 教學系列05"},{"body":"","link":"https://benzhub.github.io/tags/dockerfile/","section":"tags","tags":null,"title":"Dockerfile"},{"body":"Dockerfile基本操作 1#FROM指令 2touch Dockerfile 3FROM alpine:latest 4#RUN 執行指令(build中執行) 5#ARG可以賦予變量 6ARG whoami=docker 7#賦予路徑myworkspace變數,只後使用${}就能帶入變數 8env myworkspace /var/www/localhost/htdocs 9#工作預設路徑改為${myworkspace} 10WORKDIR ${myworkspace} 11#COPY複製檔案到image裡面 12COPY ./content.txt ./ 13RUN ls -l ./ 14RUN cat ./content.txt \u0026gt;\u0026gt; index.html 15RUN echo \u0026#34;I impersonated the unicorn.\u0026#34; \\ 16 \u0026amp;\u0026amp; echo \u0026#34;I love ${whoami}.\u0026#34; \\ 17 \u0026amp;\u0026amp; ls -l / 18RUN echo \u0026#34;I impersonated the unicorn.\u0026#34; \\ 19 \u0026amp;\u0026amp; echo \u0026#34;I love ${whoami}.\u0026#34; \\ 20 \u0026amp;\u0026amp; ls -l / 21RUN apk --update add apache2 22RUN rm -rf /var/cache/apk/* 23# httpd -D FOREGROUND 24#ENTRYPOINT,image一啟動container默認執行的command(container 啟動後執行) 25ENTRYPOINT [\u0026#34;tail\u0026#34;, \u0026#34;-f\u0026#34;, \u0026#34;/dev/null\u0026#34;] 26ENTRYPOINT [\u0026#34;httpd\u0026#34;, \u0026#34;-D\u0026#34;, \u0026#34;FOREGROUND\u0026#34;] 27#建立image 28docker build -t lenrich1403/aplinetest . Dockerfile build 1sudo docker build --build-arg whoami=Linux -t lenrich1403/argtest . 上一篇 container基本操作 | Docker 教學系列03\n下一篇 docker container 網路模式介紹 | Docker 教學系列05\n","link":"https://benzhub.github.io/post/docker/4/","section":"post","tags":["docker","Dockerfile"],"title":"Dockerfile基本操作 | Docker 教學系列04"},{"body":"container 基本操作 1#先下載我們需要的映像檔 2sudo docker pull alpine 3#啟動alpine 的container 並命名為test1並且查看啟動的container的根目錄 4sudo docker run --name test1 alpine:latest ls / 5#-it互動模式 可以進去container 打shell的指令 6sudo docker run -it --name test3 alpine:latest /bin/sh 7#讓container 可以在背景不斷執行的指令 8sudo docker run -d --name test4 alpine:latest tail -f /dev/null 9#exec進入container 可以進去做sh指令 10sudo docker exec -it test4 /bin/sh 11#離開container 12exit 13#container 端口映射 14#拉下最新版本的nginx image 15sudo docker pull nginx:latest 16#啟動nginx的container 並且映射對應的端口 17sudo docker run -d --name test6 -p 8088:80 nginx:latest 18#停止container 19sudo docker stop test6 20#刪除container 21sudo docker rm test6 22#container啟動中強制刪除 23sudo docker rm -f test6 上一篇 image基本操作 | Docker 教學系列02\n下一篇 Dockerfile基本操作 | Docker 教學系列04\n","link":"https://benzhub.github.io/post/docker/3/","section":"post","tags":["docker","docker container"],"title":"container基本操作 | Docker 教學系列03"},{"body":"","link":"https://benzhub.github.io/tags/docker-container/","section":"tags","tags":null,"title":"docker container"},{"body":"","link":"https://benzhub.github.io/tags/docker-image/","section":"tags","tags":null,"title":"docker image"},{"body":"image基本操作 image 下載.使用.製作.上傳 1#查看所有本地的image 檔案 2sudo docker image ls -a 3#拉下想要的image 檔案 4sudo docker pull hello-world 5#啟動image 6sudo docker container run hello-world 製作自己的image 1#創建目錄 2mkdir dockertest001 3#進入目錄 4cd dockertest001 5#創建 Dockerfile 6tocuh Dockerfile 7#寫入 8vim Dockerfile 9#用本地當下目錄的Dockerfile 創建 image 10docker build -t lenrich1403/test-image-build . 11#創建時帶參數進去 12docker build -t lenrich1403/test-image-build002 --build-arg my_name_is=\u0026#34;Dan Hooker\u0026#34; 上傳製作的image 到自己的DockerHub帳號 1#登入docker 帳號#輸入你的帳號密碼 2docker login 3#上傳 一定要帶你自己的帳號 4docker push lenrich1403/test-image-build 清理不需要的image 1# 查看本地所有docker images 2sudo docker images 3 4# 刪除本地docker image 5# 如果要不管docker image 有沒有跟任何docker container 關聯的話,加上-f 強制刪除(小心使用) 6sudo docker rmi -f \u0026lt;docker image name\u0026gt; 7 8# 如果無法移除,很有可能是因為這個docker image 被container 使用 9# 必須先把docker container移除掉 10# 如果要不管docker container 有沒有啟動的話,加上-f 強制刪除(小心使用) 11sudo docker rm -f \u0026lt;docker container name\u0026gt; 上一篇 在不同os上使用安裝docker | Docker 教學系列01\n下一篇 container基本操作 | Docker 教學系列03\n","link":"https://benzhub.github.io/post/docker/2/","section":"post","tags":["docker","docker image"],"title":"image基本操作 | Docker 教學系列02"},{"body":"Linux 上面安裝docker 查看你的linux版本 1cat /etc/os-release centos 8 上安裝docker 1sudo yum -y install docker 2# 查看是否安裝成功 3sudo docker --version centos 7 上安裝docker 1sudo yum remove docker docker-common container-selinux docker-selinux docker-engine docker-engine-selinux 2sudo yum install -y yum-utils device-mapper-persistent-data lvm2 3sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 4sudo yum-config-manager --enable docker-ce-edge 5sudo yum makecache fast 6sudo yum install docker-ce 7# 查看是否安裝成功 8sudo docker --version ubuntu 上安裝 1sudo apt -y install docker.io 2sudo apt -y install docker-compose 3# 查看是否安裝成功 4sudo docker --version docker service 操作 1#啟動 2sudo sytemclt start docker 3#系統默認啟動 4sudo systemclt enable docker 5#關閉 6sudo systemclt stop docker 下一篇 image基本操作 | Docker 教學系列02\n","link":"https://benzhub.github.io/post/docker/1/","section":"post","tags":["docker"],"title":"在不同os上使用安裝docker | Docker 教學系列01"},{"body":"MySQL MySQL Docker安裝教學 如果對於docker的操作還不熟悉的朋友們，可以到我的docker教學系列來學習基礎的docker操作\n1#使用docker 啟動mysql,帳號為root,密碼為mysql,端口為3306 2sudo docker run -d --name flask-api-mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mysql mysql:latest 安裝workbench \u0026amp; 連線設定與進入 workbench是一個免費的圖形化介面的mysql client端工具 下載workbench 輸入你使用docker安裝的mysql相關資訊 上一篇MySQL常用指令 | MySQL 教學系列01\n下一篇\n","link":"https://benzhub.github.io/post/mysql/2/","section":"post","tags":["mysql","docker","workbench"],"title":" MySQL Docker安裝教學 | MySQL 教學系列02"},{"body":"","link":"https://benzhub.github.io/tags/mysql/","section":"tags","tags":null,"title":"mysql"},{"body":"","link":"https://benzhub.github.io/categories/mysql-%E6%95%99%E5%AD%B8%E7%B3%BB%E5%88%97/","section":"categories","tags":null,"title":"MySQL 教學系列"},{"body":"","link":"https://benzhub.github.io/tags/workbench/","section":"tags","tags":null,"title":"workbench"},{"body":"MySQL MySQL常用指令 1#使用utf-8建立名為api的資料庫 2CREATE SCHEMA `api` DEFAULT CHARACTER SET utf8 ; 3 4#創建資料表(table)和欄位(column) 5CREATE TABLE `api`.`users` ( 6 `id` INT NOT NULL AUTO_INCREMENT, 7 `name` VARCHAR(45) NULL, 8 `gender` INT NULL, 9 `birth` DATE NULL, 10 `note` LONGTEXT NULL, 11 PRIMARY KEY (`id`)); 12 13#新增欄位:deleted 14ALTER TABLE `api`.`users` 15ADD COLUMN `deleted` INT NULL AFTER `note`; 16 17#insert 新增資料 18INSERT INTO `api`.`users` (`name`, `gender`, `birth`, `note`) VALUES (\u0026#39;Jack\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;2000-01-01\u0026#39;, \u0026#39;Jack is a good boy.\u0026#39;); 19 20#delete 刪除資料 21DELETE FROM `api`.`users` WHERE `id`=\u0026#39;5\u0026#39;; 下一篇我們將會開始進入MySQL安裝教學 進入下一篇\n下一篇MySQL Docker安裝教學 | MySQL 教學系列02\n","link":"https://benzhub.github.io/post/mysql/1/","section":"post","tags":["mysql"],"title":" MySQL常用指令 | MySQL 教學系列01"},{"body":"HTML5語意化標籤 優化內容結構與程式碼結構 比div更加語意化與易讀易理解，方便開發和維護 對於seo更友善 方便於手機和盲人閱讀器識別 有利於協同開發，符合W3C標準 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;字符實體和符號\u0026lt;/title\u0026gt; 8 \u0026lt;/head\u0026gt; 9 \u0026lt;body\u0026gt; 10 \u0026lt;header\u0026gt;\u0026lt;/header\u0026gt; 11 \u0026lt;nav\u0026gt;\u0026lt;/nav\u0026gt; 12 \u0026lt;main\u0026gt;\u0026lt;/main\u0026gt; 13 \u0026lt;section\u0026gt;\u0026lt;/section\u0026gt; 14 \u0026lt;aside\u0026gt;\u0026lt;/aside\u0026gt; 15 \u0026lt;footer\u0026gt;\u0026lt;/footer\u0026gt; 16 \u0026lt;/body\u0026gt; 17\u0026lt;/html\u0026gt; 上一篇字符實體和符號 | 前端基礎教學12\n下一篇CSS引入方式 | 前端基礎教學14\n","link":"https://benzhub.github.io/post/frontend-basic/13/","section":"post","tags":["html","css"],"title":"HTML5語意化標籤 | 前端基礎教學13"},{"body":"字符實體和符號 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;字符實體和符號\u0026lt;/title\u0026gt; 8 \u0026lt;/head\u0026gt; 9 \u0026lt;body\u0026gt; 10 \u0026lt;!-- https://w3school.com.cn/html/html_entities.asp --\u0026gt; 11 \u0026lt;!-- 連續空格(不間斷空格) --\u0026gt; 12 \u0026lt;p\u0026gt;Hello, my name is \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp;Summer\u0026lt;/p\u0026gt; 13 \u0026lt;!-- 大於小於 --\u0026gt; 14 \u0026lt;p\u0026gt;3\u0026amp;nbsp; \u0026gt;\u0026amp;nbsp; 2\u0026lt;/p\u0026gt; 15 \u0026lt;p\u0026gt;3 \u0026amp;gt; 2\u0026lt;/p\u0026gt; 16 \u0026lt;p\u0026gt;3 \u0026amp;#62; 2\u0026lt;/p\u0026gt; 17 \u0026lt;p\u0026gt;3 \u0026amp;lt; 2\u0026lt;/p\u0026gt; 18 \u0026lt;p\u0026gt;3 \u0026amp;#60; 2\u0026lt;/p\u0026gt; 19 \u0026lt;!-- 版權和註冊商標 --\u0026gt; 20 \u0026lt;p\u0026gt;\u0026amp;copy;\u0026lt;/p\u0026gt; 21 \u0026lt;p\u0026gt;\u0026amp;reg;\u0026lt;/p\u0026gt; 22 \u0026lt;!-- 貨幣 --\u0026gt; 23 \u0026lt;p\u0026gt;\u0026amp;cent;\u0026lt;/p\u0026gt; 24 \u0026lt;p\u0026gt;\u0026amp;pound;\u0026lt;/p\u0026gt; 25 \u0026lt;p\u0026gt;\u0026amp;yen;\u0026lt;/p\u0026gt; 26 \u0026lt;p\u0026gt;\u0026amp;euro;\u0026lt;/p\u0026gt; 27 \u0026lt;!-- 撲克牌 --\u0026gt; 28 \u0026lt;p\u0026gt;\u0026amp;spades;\u0026lt;/p\u0026gt; 29 \u0026lt;p\u0026gt;\u0026amp;clubs;\u0026lt;/p\u0026gt; 30 \u0026lt;p\u0026gt;\u0026amp;hearts;\u0026lt;/p\u0026gt; 31 \u0026lt;p\u0026gt;\u0026amp;diams;\u0026lt;/p\u0026gt; 32 \u0026lt;!-- 原始碼 --\u0026gt; 33 \u0026lt;code\u0026gt; \u0026amp;lt;?php echo \u0026#39;Hello World\u0026#39; ?\u0026amp;gt; \u0026lt;/code\u0026gt; 34 \u0026lt;p\u0026gt;保存文件可以按住鍵盤中的\u0026lt;kbd\u0026gt;Ctrl+S\u0026lt;/kbd\u0026gt;\u0026lt;/p\u0026gt; 35 \u0026lt;/body\u0026gt; 36\u0026lt;/html\u0026gt; 上一篇div和span | 前端基礎教學11\n下一篇HTML5語意化標籤 | 前端基礎教學13\n","link":"https://benzhub.github.io/post/frontend-basic/12/","section":"post","tags":["html","css"],"title":"字符實體和符號 | 前端基礎教學12"},{"body":"div和span 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;div和span, class和id\u0026lt;/title\u0026gt; 8 \u0026lt;style\u0026gt; 9 .card { 10 border: 1px solid #ccc; 11 background: #f4f4f4; 12 padding: 20px; 13 margin-bottom: 10px; 14 } 15 .enhance { 16 color: yellow; 17 background-color: black; 18 } 19 \u0026lt;/style\u0026gt; 20 \u0026lt;/head\u0026gt; 21 \u0026lt;body\u0026gt; 22 \u0026lt;!-- id是唯一值 --\u0026gt; 23 \u0026lt;div id=\u0026#34;main-header\u0026#34; class=\u0026#34;card\u0026#34;\u0026gt; 24 \u0026lt;h1\u0026gt;我的blog\u0026lt;/h1\u0026gt; 25 \u0026lt;p\u0026gt;歡迎來到我的blog\u0026lt;/p\u0026gt; 26 \u0026lt;/div\u0026gt; 27 \u0026lt;ul id=\u0026#34;main-nav\u0026#34;\u0026gt; 28 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;主頁\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 29 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;關於我們\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 30 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;聯繫我們\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 31 \u0026lt;/ul\u0026gt; 32 \u0026lt;div id=\u0026#34;about\u0026#34; class=\u0026#34;card\u0026#34;\u0026gt; 33 \u0026lt;h3\u0026gt;關於我們\u0026lt;/h3\u0026gt; 34 \u0026lt;p\u0026gt; 35 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque, 36 consequatur, illum maxime molestiae labore in necessitatibus qui, 37 voluptas placeat officia 38 \u0026lt;!-- span 不是塊級元素因此常常搭配p 標籤使用(不會影響到整塊或是強制換行) --\u0026gt; 39 \u0026lt;span class=\u0026#34;enhance\u0026#34; 40 \u0026gt;dolorem sequi praesentium? Officiis consectetur\u0026lt;/span 41 \u0026gt; 42 veniam doloremque excepturi repellat ducimus. 43 \u0026lt;/p\u0026gt; 44 \u0026lt;/div\u0026gt; 45 \u0026lt;div id=\u0026#34;contact\u0026#34; class=\u0026#34;card\u0026#34;\u0026gt; 46 \u0026lt;h3\u0026gt;聯繫我們\u0026lt;/h3\u0026gt; 47 \u0026lt;ul\u0026gt; 48 \u0026lt;li\u0026gt;地址:台北市中正南路一段55號\u0026lt;/li\u0026gt; 49 \u0026lt;li\u0026gt;電話:02-1234567\u0026lt;/li\u0026gt; 50 \u0026lt;li\u0026gt;email:test@test.com\u0026lt;/li\u0026gt; 51 \u0026lt;/ul\u0026gt; 52 \u0026lt;/div\u0026gt; 53 \u0026lt;div id=\u0026#34;main-footer\u0026#34;\u0026gt; 54 \u0026lt;p\u0026gt;Copyright \u0026amp;copy; 2021\u0026lt;/p\u0026gt; 55 \u0026lt;/div\u0026gt; 56 \u0026lt;/body\u0026gt; 57\u0026lt;/html\u0026gt; 上一篇塊級元素\u0026amp;內聯元素 | 前端基礎教學10\n下一篇字符實體和符號 | 前端基礎教學12\n","link":"https://benzhub.github.io/post/frontend-basic/11/","section":"post","tags":["html","css"],"title":"div和span | 前端基礎教學11"},{"body":"塊級元素\u0026amp;內聯元素 塊級元素 block level element(會換行) 相關知識\n塊級元素會站滿一整行，並且會換行 以下是常見的塊級元素 1\u0026lt;h1\u0026gt; 2\u0026lt;p\u0026gt; 3\u0026lt;ul\u0026gt; 4\u0026lt;table\u0026gt; 內聯元素 inline element(不會換行，並排) 相關知識\n內聯元素不會換行，只會並排 以下是常見的內聯元素 1\u0026lt;b\u0026gt; 2\u0026lt;td\u0026gt; 3\u0026lt;a\u0026gt; 4\u0026lt;img\u0026gt; 5\u0026lt;span\u0026gt; 上一篇表單和輸入框標籤 | 前端基礎教學09\n下一篇div和span | 前端基礎教學11\n","link":"https://benzhub.github.io/post/frontend-basic/10/","section":"post","tags":["html","css"],"title":"塊級元素\u0026內聯元素 | 前端基礎教學10"},{"body":"表單和輸入框標籤 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;表單和輸入框\u0026lt;/title\u0026gt; 8 \u0026lt;/head\u0026gt; 9 \u0026lt;body\u0026gt; 10 \u0026lt;form action=\u0026#34;process.php\u0026#34;\u0026gt; 11 \u0026lt;!-- 文本 --\u0026gt; 12 \u0026lt;div\u0026gt; 13 \u0026lt;label for=\u0026#34;name\u0026#34;\u0026gt;姓名\u0026lt;/label\u0026gt; 14 \u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;name\u0026#34; name=\u0026#34;name\u0026#34; value=\u0026#34;summer\u0026#34; /\u0026gt; 15 \u0026lt;/div\u0026gt; 16 \u0026lt;br /\u0026gt; 17 \u0026lt;!-- 郵箱 --\u0026gt; 18 \u0026lt;!-- placeholder 提示訊息 --\u0026gt; 19 \u0026lt;div\u0026gt; 20 \u0026lt;label for=\u0026#34;email\u0026#34;\u0026gt;郵箱\u0026lt;/label\u0026gt; 21 \u0026lt;input 22 type=\u0026#34;email\u0026#34; 23 name=\u0026#34;email\u0026#34; 24 id=\u0026#34;email\u0026#34; 25 placeholder=\u0026#34;請輸入你的email\u0026#34; 26 /\u0026gt; 27 \u0026lt;/div\u0026gt; 28 \u0026lt;br /\u0026gt; 29 \u0026lt;!-- 密碼 --\u0026gt; 30 \u0026lt;div\u0026gt; 31 \u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;密碼\u0026lt;/label\u0026gt; 32 \u0026lt;input type=\u0026#34;password\u0026#34; id=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; /\u0026gt; 33 \u0026lt;/div\u0026gt; 34 \u0026lt;!-- 多行文本 --\u0026gt; 35 \u0026lt;div\u0026gt; 36 \u0026lt;label for=\u0026#34;message\u0026#34;\u0026gt;消息\u0026lt;/label\u0026gt; 37 \u0026lt;br /\u0026gt; 38 \u0026lt;!-- cols:列寬 rows:行高 --\u0026gt; 39 \u0026lt;textarea name=\u0026#34;message\u0026#34; id=\u0026#34;message\u0026#34; cols=\u0026#34;50\u0026#34; rows=\u0026#34;10\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; 40 \u0026lt;/div\u0026gt; 41 \u0026lt;!-- 下拉框 --\u0026gt; 42 \u0026lt;!-- selected 默認被選中 --\u0026gt; 43 \u0026lt;div\u0026gt; 44 \u0026lt;label for=\u0026#34;gender\u0026#34;\u0026gt;性別\u0026lt;/label\u0026gt; 45 \u0026lt;select name=\u0026#34;gender\u0026#34; id=\u0026#34;gender\u0026#34;\u0026gt; 46 \u0026lt;option value=\u0026#34;male\u0026#34;\u0026gt;男性\u0026lt;/option\u0026gt; 47 \u0026lt;option value=\u0026#34;female\u0026#34; selected\u0026gt;女性\u0026lt;/option\u0026gt; 48 \u0026lt;/select\u0026gt; 49 \u0026lt;/div\u0026gt; 50 51 \u0026lt;!-- 數字 --\u0026gt; 52 \u0026lt;div\u0026gt; 53 \u0026lt;label for=\u0026#34;age\u0026#34;\u0026gt;年齡\u0026lt;/label\u0026gt; 54 \u0026lt;input type=\u0026#34;number\u0026#34; name=\u0026#34;number\u0026#34; id=\u0026#34;age\u0026#34; /\u0026gt; 55 \u0026lt;/div\u0026gt; 56 57 \u0026lt;!-- 日期 --\u0026gt; 58 \u0026lt;div\u0026gt; 59 \u0026lt;label for=\u0026#34;birthday\u0026#34;\u0026gt;生日\u0026lt;/label\u0026gt; 60 \u0026lt;input type=\u0026#34;date\u0026#34; name=\u0026#34;birthday\u0026#34; id=\u0026#34;birthday\u0026#34; /\u0026gt; 61 \u0026lt;/div\u0026gt; 62 63 \u0026lt;!-- 單選框 --\u0026gt; 64 \u0026lt;div\u0026gt; 65 \u0026lt;label for=\u0026#34;membership\u0026#34;\u0026gt;會員身分\u0026lt;/label\u0026gt; 66 \u0026lt;br /\u0026gt; 67 \u0026lt;input type=\u0026#34;radio\u0026#34; value=\u0026#34;simple\u0026#34; name=\u0026#34;membership\u0026#34; id=\u0026#34;membership\u0026#34; /\u0026gt; 68 VIP 69 \u0026lt;br /\u0026gt; 70 \u0026lt;input 71 type=\u0026#34;radio\u0026#34; 72 value=\u0026#34;standard\u0026#34; 73 name=\u0026#34;membership\u0026#34; 74 id=\u0026#34;membership\u0026#34; 75 /\u0026gt; 76 VVIP 77 \u0026lt;br /\u0026gt; 78 \u0026lt;input 79 type=\u0026#34;radio\u0026#34; 80 value=\u0026#34;super\u0026#34; 81 name=\u0026#34;membership\u0026#34; 82 id=\u0026#34;membership\u0026#34; 83 checked 84 /\u0026gt; 85 VVVIP 86 \u0026lt;/div\u0026gt; 87 88 \u0026lt;!-- 複選框 --\u0026gt; 89 \u0026lt;div\u0026gt; 90 \u0026lt;label for=\u0026#34;hobbies\u0026#34;\u0026gt;會員愛好\u0026lt;/label\u0026gt; 91 \u0026lt;br /\u0026gt; 92 \u0026lt;input type=\u0026#34;checkbox\u0026#34; value=\u0026#34;sport\u0026#34; name=\u0026#34;hobbies\u0026#34; id=\u0026#34;hobbies\u0026#34; /\u0026gt; 93 運動 94 \u0026lt;br /\u0026gt; 95 \u0026lt;input type=\u0026#34;checkbox\u0026#34; value=\u0026#34;movie\u0026#34; name=\u0026#34;hobbies\u0026#34; id=\u0026#34;hobbies\u0026#34; /\u0026gt; 96 看電影 97 \u0026lt;br /\u0026gt; 98 \u0026lt;input 99 type=\u0026#34;checkbox\u0026#34; 100 value=\u0026#34;read\u0026#34; 101 name=\u0026#34;hobbies\u0026#34; 102 id=\u0026#34;hobbies\u0026#34; 103 checked 104 /\u0026gt; 105 看書 106 \u0026lt;/div\u0026gt; 107 \u0026lt;!-- 表單提交 --\u0026gt; 108 \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;提交\u0026#34; /\u0026gt; 109 \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt;提交\u0026lt;/button\u0026gt; 110 \u0026lt;!-- 標單重置 --\u0026gt; 111 \u0026lt;button type=\u0026#34;reset\u0026#34;\u0026gt;重置\u0026lt;/button\u0026gt; 112 \u0026lt;/form\u0026gt; 113 \u0026lt;/body\u0026gt; 114\u0026lt;/html\u0026gt; 上一篇列表和表格標籤 | 前端基礎教學08\n下一篇塊級元素\u0026amp;內聯元素 | 前端基礎教學10\n","link":"https://benzhub.github.io/post/frontend-basic/9/","section":"post","tags":["html","css"],"title":"表單和輸入框標籤 | 前端基礎教學09"},{"body":"列表和表格標籤 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;列表和表格\u0026lt;/title\u0026gt; 8 \u0026lt;/head\u0026gt; 9 \u0026lt;body\u0026gt; 10 \u0026lt;!-- 無序列表 --\u0026gt; 11\t\u0026lt;!-- \u0026lt;ul style=\u0026#34;list-style-type: disc\u0026#34;\u0026gt; --\u0026gt; 12 \u0026lt;!-- \u0026lt;ul style=\u0026#34;list-style-type: circle\u0026#34;\u0026gt; --\u0026gt; 13 \u0026lt;!-- \u0026lt;ul style=\u0026#34;list-style-type: square\u0026#34;\u0026gt; --\u0026gt; 14 \u0026lt;ul\u0026gt; \u0026lt;!-- unorder list --\u0026gt; 15 \u0026lt;li\u0026gt;Item 1\u0026lt;/li\u0026gt; 16 \u0026lt;li\u0026gt;Item 2\u0026lt;/li\u0026gt; 17 \u0026lt;li\u0026gt;Item 3\u0026lt;/li\u0026gt; 18 \u0026lt;li\u0026gt;Item 4\u0026lt;/li\u0026gt; 19 \u0026lt;/ul\u0026gt; 20 21 \u0026lt;!-- 有序列表 --\u0026gt; 22 \u0026lt;!-- \u0026lt;ol type=\u0026#34;1\u0026#34;\u0026gt; --\u0026gt; 23 \u0026lt;!-- \u0026lt;ol type=\u0026#34;a\u0026#34;\u0026gt; --\u0026gt; 24 \u0026lt;!-- \u0026lt;ol type=\u0026#34;I\u0026#34;\u0026gt; --\u0026gt; 25 \u0026lt;!-- \u0026lt;ol type=\u0026#34;i\u0026#34;\u0026gt; --\u0026gt; 26 \u0026lt;ol\u0026gt; \u0026lt;!-- order list --\u0026gt; 27 \u0026lt;li\u0026gt;Item 1\u0026lt;/li\u0026gt; 28 \u0026lt;li\u0026gt;Item 2\u0026lt;/li\u0026gt; 29 \u0026lt;li\u0026gt;Item 3\u0026lt;/li\u0026gt; 30 \u0026lt;li\u0026gt;Item 4\u0026lt;/li\u0026gt; 31 \u0026lt;/ol\u0026gt; 32 33 \u0026lt;!-- 嵌套列表 --\u0026gt; 34 \u0026lt;!-- Item速寫出兩個 li*2 --\u0026gt; 35 \u0026lt;ul\u0026gt; 36 \u0026lt;li\u0026gt;Item 1\u0026lt;/li\u0026gt; 37 \u0026lt;li\u0026gt; 38 Item 2 39 \u0026lt;ul\u0026gt; 40 \u0026lt;li\u0026gt;嵌套Item 1\u0026lt;/li\u0026gt; 41 \u0026lt;li\u0026gt;嵌套Item 2\u0026lt;/li\u0026gt; 42 \u0026lt;/ul\u0026gt; 43 \u0026lt;/li\u0026gt; 44 \u0026lt;li\u0026gt;Item 3\u0026lt;/li\u0026gt; 45 \u0026lt;li\u0026gt;Item 4\u0026lt;/li\u0026gt; 46 \u0026lt;/ul\u0026gt; 47 48 \u0026lt;!-- 表格 --\u0026gt; 49 \u0026lt;table style=\u0026#34;width: 600px\u0026#34;\u0026gt; 50 \u0026lt;thead\u0026gt; 51 \u0026lt;tr\u0026gt; 52 \u0026lt;th\u0026gt;姓名\u0026lt;/th\u0026gt; 53 \u0026lt;th\u0026gt;年齡\u0026lt;/th\u0026gt; 54 \u0026lt;th\u0026gt;email\u0026lt;/th\u0026gt; 55 \u0026lt;/tr\u0026gt; 56 \u0026lt;/thead\u0026gt; 57 \u0026lt;tbody\u0026gt; 58 \u0026lt;tr\u0026gt; 59 \u0026lt;td\u0026gt;Summer\u0026lt;/td\u0026gt; 60 \u0026lt;td\u0026gt;19\u0026lt;/td\u0026gt; 61 \u0026lt;td\u0026gt;summer@test.com\u0026lt;/td\u0026gt; 62 \u0026lt;/tr\u0026gt; 63 \u0026lt;tr\u0026gt; 64 \u0026lt;td\u0026gt;Lucy\u0026lt;/td\u0026gt; 65 \u0026lt;td\u0026gt;20\u0026lt;/td\u0026gt; 66 \u0026lt;td\u0026gt;lucy@test.com\u0026lt;/td\u0026gt; 67 \u0026lt;/tr\u0026gt; 68 \u0026lt;tr\u0026gt; 69 \u0026lt;td\u0026gt;Allen\u0026lt;/td\u0026gt; 70 \u0026lt;td\u0026gt;31\u0026lt;/td\u0026gt; 71 \u0026lt;td\u0026gt;allen@test.com\u0026lt;/td\u0026gt; 72 \u0026lt;/tr\u0026gt; 73 \u0026lt;/tbody\u0026gt; 74 \u0026lt;/table\u0026gt; 75 \u0026lt;/body\u0026gt; 76\u0026lt;/html\u0026gt; 上一篇超鏈結和圖片 | 前端基礎教學07\n下一篇表單和輸入框標籤 | 前端基礎教學09\n","link":"https://benzhub.github.io/post/frontend-basic/8/","section":"post","tags":["html","css"],"title":"列表和表格標籤 | 前端基礎教學08"},{"body":"超鏈結和圖片 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;超鏈結和圖片\u0026lt;/title\u0026gt; 8 \u0026lt;/head\u0026gt; 9 \u0026lt;body\u0026gt; 10 \u0026lt;!-- 外部鏈接 --\u0026gt; 11 \u0026lt;p\u0026gt; 12 \u0026lt;a href=\u0026#34;https://google.com\u0026#34;\u0026gt;超鏈結到google網址\u0026lt;/a\u0026gt; 13 \u0026lt;/p\u0026gt; 14 \u0026lt;p\u0026gt; 15 \u0026lt;a href=\u0026#34;https://google.com\u0026#34; target=\u0026#34;_blank\u0026#34; 16 \u0026gt;超鏈結到google網址(開啟新分頁)\u0026lt;/a 17 \u0026gt; 18 \u0026lt;/p\u0026gt; 19 20 \u0026lt;!-- 內部鏈接 --\u0026gt; 21 \u0026lt;p\u0026gt; 22 \u0026lt;a href=\u0026#34;/01-basic-layout.html\u0026#34;\u0026gt;第一頁\u0026lt;/a\u0026gt; 23 \u0026lt;/p\u0026gt; 24 \u0026lt;p\u0026gt; 25 \u0026lt;a href=\u0026#34;/02-liver-server.html\u0026#34;\u0026gt;第二頁\u0026lt;/a\u0026gt; 26 \u0026lt;/p\u0026gt; 27 \u0026lt;p\u0026gt; 28 \u0026lt;a href=\u0026#34;/03-meta-tags.html\u0026#34;\u0026gt;第三頁\u0026lt;/a\u0026gt; 29 \u0026lt;/p\u0026gt; 30 31 \u0026lt;!-- 本地圖片 --\u0026gt; 32 \u0026lt;img src=\u0026#34;./images/view.jpeg\u0026#34; alt=\u0026#34;\u0026#34; /\u0026gt; 33 \u0026lt;!-- 外部引用圖片 https://pexels.com https://source.unsplash.com --\u0026gt; 34 \u0026lt;img 35 src=\u0026#34;https://images.dog.ceo/breeds/hound-basset/n02088238_2574.jpg\u0026#34; 36 alt=\u0026#34;狗狗圖片\u0026#34; 37 width=\u0026#34;200\u0026#34; 38 /\u0026gt; 39 \u0026lt;/body\u0026gt; 40\u0026lt;/html\u0026gt; 上一篇標題段落排版標籤 | 前端基礎教學06\n下一篇列表和表格標籤 | 前端基礎教學08\n","link":"https://benzhub.github.io/post/frontend-basic/7/","section":"post","tags":["html","css"],"title":"超鏈結和圖片 | 前端基礎教學07"},{"body":"Hello, I’m Ben Z 癡迷於各種技術Python, Java, BlockChain, PHP, Linux, Node.js, React, React Native, Docker, SEO ...\n也對行銷, 管理, 投資領域有興趣\n這個網站主要分享站長學習心得,會將學習筆記整理成部落格文章\n我的個人github網址\n技術交流歡迎到\u0026lt;聯絡我\u0026gt;分頁來信討論\n","link":"https://benzhub.github.io/about/","section":"","tags":null,"title":"About"},{"body":"標題段落排版標籤 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 7 \u0026lt;title\u0026gt;標題.段落.排版標籤\u0026lt;/title\u0026gt; 8 \u0026lt;/head\u0026gt; 9 \u0026lt;body\u0026gt; 10 \u0026lt;!-- 標題標籤 --\u0026gt; 11 \u0026lt;h1\u0026gt;標題1\u0026lt;/h1\u0026gt; 12 \u0026lt;h2\u0026gt;標題2\u0026lt;/h2\u0026gt; 13 \u0026lt;h3\u0026gt;標題3\u0026lt;/h3\u0026gt; 14 \u0026lt;h4\u0026gt;標題4\u0026lt;/h4\u0026gt; 15 \u0026lt;h5\u0026gt;標題5\u0026lt;/h5\u0026gt; 16 \u0026lt;h6\u0026gt;標題6\u0026lt;/h6\u0026gt; 17 \u0026lt;!-- 段落標籤 --\u0026gt; 18 \u0026lt;!-- strong 加粗 --\u0026gt; 19 \u0026lt;!-- b 加粗 html5棄用 不建議使用 --\u0026gt; 20 \u0026lt;!-- em 斜體 --\u0026gt; 21 \u0026lt;!-- br 換行 --\u0026gt; 22 \u0026lt;!-- hr 水平線 --\u0026gt; 23 \u0026lt;!-- del 刪除線 --\u0026gt; 24\t\u0026lt;!-- Lorem500 隨意產出500個單字的文本 --\u0026gt; 25 \u0026lt;p\u0026gt; 26 Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo, maxime quod 27 aliquid \u0026lt;strong\u0026gt;praesentium\u0026lt;/strong\u0026gt; 28 \u0026lt;em\u0026gt;eos dolorum culpa? Dicta magni doloribus deserunt veritatis\u0026lt;/em\u0026gt; 29 explicabo laudantium aspernatur? \u0026lt;b\u0026gt;Vitae provident in voluptatemVitae provident in voluptatem\u0026lt;/b\u0026gt; aspernatur 30 voluptatibus quae fuga \u0026lt;br /\u0026gt; 31 perspiciatis, ipsam deleniti mollitia 32 \u0026lt;hr\u0026gt; 33 repudiandae sint? In sed explicabo 34 culpa obcaecati sit \u0026lt;del\u0026gt;accusamus magnam\u0026lt;/del\u0026gt; enim architecto rem nostrum! 35 \u0026lt;/p\u0026gt; 36 \u0026lt;/body\u0026gt; 37\u0026lt;/html\u0026gt; 上一篇meta標籤和搜尋引擎 | 前端基礎教學05\n下一篇超鏈結和圖片 | 前端基礎教學07\n","link":"https://benzhub.github.io/post/frontend-basic/6/","section":"post","tags":["html","css"],"title":"標題段落排版標籤 | 前端基礎教學06"},{"body":"","link":"https://benzhub.github.io/tags/git/","section":"tags","tags":null,"title":"git"},{"body":"git 四種檔案狀態介紹 untracked (未追蹤的，代表尚未被加入 Git 儲存庫的檔案狀態) unmodified (未修改的，代表檔案第一次被加入，或是檔案內容與 HEAD 內容一致的狀態) modified (已修改的，代表檔案已經被編輯過，或是檔案內容與 HEAD 內容不一致的狀態) staged (等待被 commit 的，代表下次執行 git commit 會將這些檔案全部送入版本庫) git 常用指令整理 1#當前資料夾建立一個 Git 儲存庫 2git init 3 4#編輯中的test.js要回覆上一個commit狀態 5git checkout master test.js 6#針對單一文件(test.js)要回覆到指定的commit ID狀態 7git checkout \u0026lt;commit ID\u0026gt; -- test.js 8#把工作目錄也給還原到目前的最新版(commit)(一次把所有檔案都給還原了) 9git reset --hard 10#還原指定commit 11git reset --hard \u0026lt;commit ID\u0026gt; 12 13#檢查git 狀態 14git status -s 15#查看修改了哪些地方 16git diff 17 18#真正把「刪除」的狀態寫進索引檔 19git rm test.txt 20#只刪除索引檔中的該檔，又要保留工作目錄下的實體檔案 21git rm --cached test.txt 22 23#檔案更名，同時更新索引與變更工作目錄下的實體檔案 24git mv oldname newname 25 26#將untrack 的檔案全部加入git 倉庫 27git add . 28#建立git commit節點 29git commit -m \u0026#34;message\u0026#34; 30#修改最後一次commit,並且不修改-m的內容 31git commit --amend --no-edit 32#修改最後一次commit,並修改-m的內容 33git commit --amend -m \u0026#34;message\u0026#34; 34#刪除最近一次的版本紀錄，但留下最後一次版本變更的異動內容 35git reset --soft HEAD^ 36 37#查看git 所有commit,並且每個單行 38git log --oneline 39#簡易圖形化 所有commit,並且每個單行 40git log --graph --oneline 41#查看所有歷史操作紀錄(可以查看所有包含隱藏的commit, 幫助回到未來) 42git reflog 43 44#查看所有分支，查看目前所在分支 45git branch 46#建立新分支 47git branch newbranch1 48#建立分支，並將目前工作目錄切換到新的分支 49git checkout -b \u0026lt;branch_name\u0026gt; 50#刪除分支 51git branch -D \u0026lt;branch_name\u0026gt; 52#切換分支 53git checkout \u0026lt;branch_name\u0026gt; 54 55#從遠端git倉庫的master分支拉下最新git commit 56git pull origin master 57#推送本地git的master分支到遠端的git倉庫的master分支上 58git push origin master 59#如果本地的git分支名字跟遠端git倉庫的master分支名字不同,使用強制HEAD 60git push origin HEAD:master 61#推送時將本地git commits強制覆蓋遠端git倉庫commits 62git push origin master -f 63#查看所有遠端倉庫名稱和對應地址 64git remote -v 65#添加遠端倉庫名稱和對應地址 66git remote add \u0026lt;short_name\u0026gt; \u0026lt;repo_url\u0026gt; 67#刪除遠端倉庫名稱和對應地址 68git remote remove \u0026lt;short_name\u0026gt; \u0026lt;repo_url\u0026gt; ","link":"https://benzhub.github.io/post/git-basic/01/","section":"post","tags":["git"],"title":"Git常用指令整理 | Git教學系列01"},{"body":"","link":"https://benzhub.github.io/categories/git%E6%95%99%E5%AD%B8%E7%B3%BB%E5%88%97/","section":"categories","tags":null,"title":"Git教學系列"},{"body":"meta標籤和搜尋引擎 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;!-- 聲明文件使用的字符編碼 --\u0026gt; 5 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 6 \u0026lt;!-- 瀏覽器的兼容設定 --\u0026gt; 7 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34; /\u0026gt; 8 \u0026lt;!-- 響應式設計的設定 --\u0026gt; 9 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; /\u0026gt; 10 \u0026lt;!-- 搜尋引擎的內容與查找(通常不超過150個字) --\u0026gt; 11 \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;這是我的第一個響應式頁面\u0026#34; /\u0026gt; 12 \u0026lt;!-- 搜尋引擎的關鍵字設定 --\u0026gt; 13 \u0026lt;meta name=\u0026#34;keywords\u0026#34; content=\u0026#34;\u0026#34; /\u0026gt; 14 \u0026lt;!-- 禁止搜尋引擎機器人索引或者抓取信息 --\u0026gt; 15 \u0026lt;meta name=\u0026#34;robots\u0026#34; content=\u0026#34;NOINDEX, NOFOLLOW\u0026#34; /\u0026gt; 16 \u0026lt;title\u0026gt;meta標籤\u0026lt;/title\u0026gt; 17\u0026lt;/head\u0026gt; 18\u0026lt;body\u0026gt; 19\u0026lt;/body\u0026gt; 20\u0026lt;/html\u0026gt; 上一篇創建並開啟HTML頁面 | 前端基礎教學04\n下一篇標題段落排版標籤 | 前端基礎教學06\n","link":"https://benzhub.github.io/post/frontend-basic/5/","section":"post","tags":["html","css","SEO"],"title":"meta標籤和搜尋引擎 | 前端基礎教學05"},{"body":"","link":"https://benzhub.github.io/tags/seo/","section":"tags","tags":null,"title":"SEO"},{"body":"","link":"https://benzhub.github.io/tags/vscode/","section":"tags","tags":null,"title":"vscode"},{"body":"步驟1: 開啟 vscode 步驟2: 創建index.html 步驟3: ! + 按下tab鍵 步驟4: 出現完整html頁面後使用 CTRL + S 存檔 步驟5: 寫下你的第一段html內容 步驟6: 安裝vscode 外掛 live server 步驟7: 右鍵使用live server 打開瀏覽器 步驟7: 看到你的第一個HTML頁面 上一篇開發環境準備 | 前端基礎教學03\n下一篇meta標籤和搜尋引擎 | 前端基礎教學05\n","link":"https://benzhub.github.io/post/frontend-basic/4/","section":"post","tags":["html","css","vscode"],"title":"創建並開啟HTML頁面 | 前端基礎教學04"},{"body":"安裝工具 瀏覽器: Google Chrome Google Chrome 下載 IDE程式碼編輯器: VScode VScode 下載 前端學習網站 w3school\n上一篇瞭解html和css | 前端基礎教學02\n下一篇創建並開啟HTML頁面 | 前端基礎教學04\n","link":"https://benzhub.github.io/post/frontend-basic/3/","section":"post","tags":["html","css"],"title":"開發環境準備 | 前端基礎教學03"},{"body":"HTML全名＝\u0026gt; Hypertext Markup Language HTML不是程式語言，而是標記語言(標籤語言)\n標記語言的作用是製作網頁結構或是文件 HTML是前端最基礎但是重要的部分 HTML的學習會比較無聊 HTML5有新增比較語意化的標籤，學習上會比較直觀 CSS全名=\u0026gt; Cascading Style Sheets CSS是樣式語言，層疊樣式表\nCSS是針對於HTML標籤的設計樣式 CSS可以擴展為Sass/Less 整理些主要常聽見的名詞 HTML: 內容展示/建構內容 CSS: 設計樣式 Javascript: 在前端中主要讓頁面動起來，可以製作許多特效與互動效果 PHP, Python, Java: 後端語言 MySQL, MongoDB: 資料庫 上一篇前端常用開發工具 | 前端基礎教學01\n下一篇開發環境準備 | 前端基礎教學03\n","link":"https://benzhub.github.io/post/frontend-basic/2/","section":"post","tags":["html","css"],"title":"瞭解html和css | 前端基礎教學02"},{"body":"","link":"https://benzhub.github.io/tags/%E5%A5%BD%E7%94%A8%E5%B7%A5%E5%85%B7/","section":"tags","tags":null,"title":"好用工具"},{"body":"圖片素材網站 https://pexels.com 此圖片網站擁有許有免費的圖庫，在開發或是測試的時候，往往會需要許多圖片填充版面，此網站是前端開發工程師不可少的圖片資源網站 icon素材庫 http://www.fontawesome.com.cn/ http://www.fontawesome.com.cn/faicons/ 此為免費的icon網站，有許多樣式的icon，可以很好的添增網站設計感 UI 邊框設計 https://neumorphism.io/ 此網站可以直接用所見即所得的方式生成邊框，大大的縮減開發時調整設計debug的時間 漸變色設計 https://mycolor.space/ https://uigradients.com/ https://cssgradient.io/ 在開發的時候，常會有漸變色的調整需求，這些網站是開發漸變色的好幫手 設計好的背景色調 https://webgradients.com/ 身為工程師的調色能力絕大多數都沒有設計師好，想要在短時間內就讓設計師刮目相看的話，此調色網站是你非常好的選擇 複雜的背景色調 https://gradienta.io/ 此網站有許多複雜的背景色調，且可以使用css作為背景，讓你的網站提升速度 動畫特效 https://animista.net/ 相信許多新手前端工程師在一踏入職場的時候，都免不了要被資深設計師 蹂躪 動畫特效一番，這個動畫特效網站，可以拯救你無數失眠的夜晚 下一篇瞭解html和css | 前端基礎教學02\n","link":"https://benzhub.github.io/post/frontend-basic/1/","section":"post","tags":["html","css","好用工具"],"title":"前端常用開發工具 | 前端基礎教學01"},{"body":"","link":"https://benzhub.github.io/series/","section":"series","tags":null,"title":"Series"}]