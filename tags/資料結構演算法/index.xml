<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>資料結構&amp;演算法 on BenzHub</title><link>https://benzhub.github.io/tags/%E8%B3%87%E6%96%99%E7%B5%90%E6%A7%8B%E6%BC%94%E7%AE%97%E6%B3%95/</link><description>Recent content in 資料結構&amp;演算法 on BenzHub</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 09 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://benzhub.github.io/tags/%E8%B3%87%E6%96%99%E7%B5%90%E6%A7%8B%E6%BC%94%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>Linked list (鏈結串列) | 資料結構&amp;演算法</title><link>https://benzhub.github.io/post/javascript/data-structures-algorithms/002-linked-list/</link><pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/data-structures-algorithms/002-linked-list/</guid><description>&lt;blockquote>
&lt;p>資料結構 &lt;strong>鏈結串列（Linked List）&lt;/strong> 是一種基本的資料結構，用於存儲一系列元素。在 &lt;strong>JavaScript&lt;/strong> 中，可以使用物件來實現鏈結串列。鏈結串列由節點（Node）組成，每個節點包含一個數據元素和一個指向下一個節點的連結。&lt;/p>
&lt;/blockquote></description></item><item><title>Big O &amp; 時間複雜度 &amp; 空間複雜度 介紹(Big O &amp; Time Complexity &amp; Space Complexity) | 資料結構&amp;演算法</title><link>https://benzhub.github.io/post/javascript/data-structures-algorithms/001-bigo-complexity/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/data-structures-algorithms/001-bigo-complexity/</guid><description>&lt;blockquote>
&lt;p>時間和空間複雜度對於開發可擴展和高性能的程式碼影響深遠。我們將入門資料結構&amp;amp;演算法的世界，首先介紹 &lt;strong>Big O&lt;/strong> 表示法，並演示如何分析和優化 &lt;strong>JavaScript&lt;/strong> 程式碼，藉由改善程式的演算法來獲得更好的效能。&lt;/p>
&lt;/blockquote></description></item></channel></rss>