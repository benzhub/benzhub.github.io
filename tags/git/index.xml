<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on BenzHub</title><link>https://benzhub.github.io/tags/git/</link><description>Recent content in git on BenzHub</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 22 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://benzhub.github.io/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git 分支合併策略: 快進合併(Fast-forward) vs. 三向合併(Three-way) | Git</title><link>https://benzhub.github.io/post/git/005-merge-strategy/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/git/005-merge-strategy/</guid><description>&lt;blockquote>
&lt;p>Git 是一個分散式版本控制系統，它允許多人協同工作在同一個專案中。當開發者在不同的分支上進行工作後，需要將這些分支合併起來，這時 Git 提供了兩種主要的合併策略： &lt;strong>快進合併（Fast-forward Merges）&lt;/strong> 和 &lt;strong>三向合併（Three-way Merges）&lt;/strong> 。&lt;/p>
&lt;/blockquote></description></item><item><title>常用Git指令一覽表 | Git</title><link>https://benzhub.github.io/post/git/004-git-command-line/</link><pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/git/004-git-command-line/</guid><description>&lt;blockquote>
&lt;p>常用 &lt;strong>Git&lt;/strong> 指令一覽表 | Git&lt;/p>
&lt;/blockquote></description></item><item><title>Git .gitignore 文件：忽略不必要的檔案和目錄 | Git</title><link>https://benzhub.github.io/post/git/003-gitignore/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/git/003-gitignore/</guid><description>&lt;blockquote>
&lt;p>在使用 &lt;strong>Git&lt;/strong> 管理程式碼的過程中，我們經常會生成一些不需要被版本控制的檔案或目錄。這些可能包括log、臨時文件、環境特定的配置等。為了避免這些不必要的檔案被提交到版本庫，我們可以使用 .gitignore 文件。&lt;/p>
&lt;/blockquote></description></item><item><title>利用Git全局設定解決 CR LF 的問題 | Git</title><link>https://benzhub.github.io/post/git/002-cr-lf/</link><pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/git/002-cr-lf/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>Git&lt;/strong> 項目中， &lt;strong>Windows&lt;/strong> 和 &lt;strong>Unix&lt;/strong> 系統的換行符（Line Endings）可能會引起一些混淆和問題。這篇文章將介紹如何配置 &lt;strong>Git&lt;/strong> 以處理 &lt;strong>CR&lt;/strong> &lt;strong>LF&lt;/strong> 並解決相關的除錯問題。&lt;/p>
&lt;/blockquote></description></item><item><title>在 Windows、Mac 和 Linux 上安裝 Git | Git</title><link>https://benzhub.github.io/post/git/001-intsall/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/git/001-intsall/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Git&lt;/strong> 是一個強大的版本控制工具，用於跟蹤和管理項目的代碼。無論你是使用 Windows、Mac 還是 Linux，這個篇文章將為你提供在各個操作系統上安裝 &lt;strong>Git&lt;/strong> 的詳細步驟。&lt;/p>
&lt;/blockquote></description></item></channel></rss>