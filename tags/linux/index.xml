<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on BenzHub</title><link>https://benzhub.github.io/tags/linux/</link><description>Recent content in linux on BenzHub</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 23 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://benzhub.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>檔案傳輸 (SFTP) | Linux</title><link>https://benzhub.github.io/post/linux/021-sftp/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/021-sftp/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Secure File Transfer Protocol（SFTP）&lt;/strong> 是一種在安全通道上進行檔案傳輸的協定，通常基於 SSH（Secure Shell）協定。 &lt;strong>SFTP&lt;/strong> 提供了一個安全的方法，允許用戶在本地和遠程Linux系統之間傳輸檔案，同時保護資料傳輸的和完整。&lt;/p>
&lt;/blockquote></description></item><item><title>使用公私鑰進行SSH連線 | Linux</title><link>https://benzhub.github.io/post/linux/020-ssh/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/020-ssh/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Secure Shell（SSH）&lt;/strong> 是一種安全的協定，它通常用於在本地和遠程 &lt;strong>Linux&lt;/strong> 系統之間建立安全的連接，並允許用戶在遠程主機上執行命令，傳輸檔案，或建立安全的通道。在本篇文章中，我們將深入探討 &lt;strong>SSH&lt;/strong> 中的一個重要功能 - 利用公私鑰對的來連線遠端主機。&lt;/p>
&lt;/blockquote></description></item><item><title>命令替換（Command Substitution） | Linux</title><link>https://benzhub.github.io/post/linux/019-command-substitution/</link><pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/019-command-substitution/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Linux&lt;/strong> 作業系統經常需要進行命令行操作，而 &lt;strong>Command Substitution&lt;/strong> 是一項強大的功能，允許將一個命令的輸出值插入到另一個命令中，或者賦值給變數。&lt;/p>
&lt;/blockquote></description></item><item><title>環境變數 （Environment） | Linux</title><link>https://benzhub.github.io/post/linux/017-environment/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/017-environment/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>Linux&lt;/strong> 中， &lt;strong>環境變數（Environment）&lt;/strong> 通常指的是用戶或進程執行的操作系統環境，包括各種環境變數、工作目錄、檔案許可權和其他相關的執行時條件。環境變數是一個重要的元素，它們包含了有關系統和用戶環境的信息，例如 PATH、HOME、USER 等。&lt;/p>
&lt;/blockquote></description></item><item><title>進程 （Processes） | Linux</title><link>https://benzhub.github.io/post/linux/018-processes/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/018-processes/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>Linux&lt;/strong> 中， &lt;strong>進程（Processes）&lt;/strong> 是系統運行的程序的實例。每個進程都是由一個或多個執行緒組成，它們在系統上運行，執行各種任務和操作。 &lt;strong>Linux&lt;/strong> 作業系統使用進程作為管理和執行任務的基本單位。&lt;/p>
&lt;/blockquote></description></item><item><title>Permission Shortcuts (權限捷徑) | Linux</title><link>https://benzhub.github.io/post/linux/016-permission-shortcuts/</link><pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/016-permission-shortcuts/</guid><description>&lt;blockquote>
&lt;p>在 Linux 系統中，權限捷徑（Permission Shortcuts）是一種簡便的表示法，用來設置檔案或目錄的權限。這些捷徑通常使用字母或符號表示，方便使用者快速設置所需的權限。&lt;/p>
&lt;/blockquote></description></item><item><title>群組權限(Group Permissions) | Linux</title><link>https://benzhub.github.io/post/linux/015-group-permissions/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/015-group-permissions/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>Linux&lt;/strong> 中，群組權限（Group Permissions）是指對於檔案或目錄的存取權限，這些權限是針對特定群組而言的。 &lt;strong>Linux&lt;/strong> 的文件系統允許使用者分為不同的群組，每個群組都有其成員，檔案或目錄可以被分配給某個群組，並授予該群組對檔案或目錄的特定權限。&lt;/p>
&lt;/blockquote></description></item><item><title>管道(Pipes) | Linux</title><link>https://benzhub.github.io/post/linux/014-pipes/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/014-pipes/</guid><description>&lt;blockquote>
&lt;p>管道(Pipes)實現了命令之間數據的流動，讓Linux 指令能夠創建強大且高效的工作流。&lt;/p>
&lt;/blockquote></description></item><item><title>輸入&amp;輸出重定向符號 (Input &amp; Output Streams) | Linux</title><link>https://benzhub.github.io/post/linux/013-input-output-streams/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/013-input-output-streams/</guid><description>&lt;blockquote>
&lt;p>輸入&amp;amp;輸出重定向符號 (Input &amp;amp; Output Streams)是許多程式在運行時，輸出log或是判斷發生error的常用方式，這個章節的技巧對於日常的系統運維可說是至關重要。&lt;/p>
&lt;/blockquote></description></item><item><title>通配符和替換 (Wildcard &amp; Replacements) | Linux</title><link>https://benzhub.github.io/post/linux/012-wildcard-replacement/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/012-wildcard-replacement/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>Linux&lt;/strong> 系統中，通配符和替換是搜尋和操作文件或目錄的強大工具。&lt;/p>
&lt;/blockquote></description></item><item><title>Bash History | Linux</title><link>https://benzhub.github.io/post/linux/007-bash-history/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/007-bash-history/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Bash&lt;/strong> 歷史紀錄你輸入的命令，提供方便的方式來查看和重複使用它們。用戶可以使用各種命令和快捷方式與此歷史交互。&lt;/p>
&lt;/blockquote></description></item><item><title>CLI Shortcuts | Linux</title><link>https://benzhub.github.io/post/linux/008-cli-shortcuts-yank/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/008-cli-shortcuts-yank/</guid><description>&lt;blockquote>
&lt;p>掌握 &lt;strong>Linux&lt;/strong> 命令行界面（CLI）可以提高效率和靈活性。我們將介紹一系列基本的 &lt;strong>Linux CLI Shortcuts&lt;/strong> 方式。&lt;/p>
&lt;/blockquote></description></item><item><title>Signals(信號) | Linux</title><link>https://benzhub.github.io/post/linux/009-signals/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/009-signals/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Linux&lt;/strong> 命令行界面使用信號作為進程之間的通信，了解 &lt;strong>Linux&lt;/strong> 信號對於管理和與運行中的進程非常重要。&lt;/p>
&lt;/blockquote></description></item><item><title>什麼是Linux ? | Linux</title><link>https://benzhub.github.io/post/linux/006-what-is-linux/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/006-what-is-linux/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Linux&lt;/strong> 是一個類似 &lt;strong>Unix&lt;/strong> 的操作系統內核，最初由 &lt;strong>Linus Torvalds&lt;/strong> 於1991年創建。&lt;/p>
&lt;/blockquote></description></item><item><title>什麼是Unix ? | Linux</title><link>https://benzhub.github.io/post/linux/005-what-is-unix/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/005-what-is-unix/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Unix&lt;/strong> 誕生於20世紀70年代初的貝爾實驗室，是許多操作系統的祖先， &lt;strong>Unix&lt;/strong> 以其穩健性、可擴展性和多用途性而聞名。&lt;/p>
&lt;/blockquote></description></item><item><title>掌握Linux文件操作: 創建和移動文件 | Linux</title><link>https://benzhub.github.io/post/linux/011-creating-moving-files/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/011-creating-moving-files/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>Linux&lt;/strong> 命令行領域，熟練地創建和移動文件是一項基本技能。這項技能通常會是你在工作上使用 &lt;strong>Linux&lt;/strong> 系統時，最常使用的一個命令行。&lt;/p>
&lt;/blockquote></description></item><item><title>讀取文件(Reading Files) | Linux</title><link>https://benzhub.github.io/post/linux/010-reading-files/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/010-reading-files/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>Linux&lt;/strong> 環境中，通過命令行閱讀文件的技巧是最基本的技巧。文件閱讀是 &lt;strong>Linux&lt;/strong> 日常操作中最常用的命令之一 。&lt;/p>
&lt;/blockquote></description></item><item><title>Linux or Mac 安裝 nvm(Node.js 的版本管理器) | Javascript</title><link>https://benzhub.github.io/post/javascript/024-linux-or-mac-install-nvm/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/024-linux-or-mac-install-nvm/</guid><description>&lt;blockquote>
&lt;p>管理 &lt;strong>Node.js&lt;/strong> 版本對很多人來說是一場惡夢，但使用 &lt;strong>nvm&lt;/strong> （Node.js版本管理器），這個過程變得簡單而高效。我們將介紹如何在Linux和Mac OS 系統安裝 &lt;strong>nvm&lt;/strong> ，使他們能夠輕鬆切換 &lt;strong>Node.js&lt;/strong> 版本。&lt;/p>
&lt;/blockquote></description></item><item><title>给Linux配置漂亮且强大的zsh | Linux</title><link>https://benzhub.github.io/post/linux/004-install-zsh/</link><pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/004-install-zsh/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Zsh&lt;/strong> 因為有自動補全指令的功能 ，因此深受工程師的喜愛，這邊我們使用熱門的 &lt;strong>oh-my-zsh&lt;/strong> ，一步一步來安裝設定我們的 &lt;strong>Zsh&lt;/strong> 吧!&lt;/p>
&lt;/blockquote></description></item><item><title>Linux有哪些Shell | Linux</title><link>https://benzhub.github.io/post/linux/002-linux-shell/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/002-linux-shell/</guid><description>&lt;blockquote>
&lt;p>我們來介紹一些常見的Linux Shell。 以及講解 &lt;strong>Shell&lt;/strong> 、 &lt;strong>Bash&lt;/strong> 和 &lt;strong>Zsh&lt;/strong> 的區別在哪?&lt;/p>
&lt;/blockquote></description></item><item><title>在Windows上使用wsl2執行Linux | Linux</title><link>https://benzhub.github.io/post/linux/003-run-linux-on-windows/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/003-run-linux-on-windows/</guid><description>&lt;blockquote>
&lt;p>如果我們想要練習 &lt;strong>Linux&lt;/strong> 指令，但又只有 &lt;strong>Windows&lt;/strong> 的電腦的話，這邊推薦你安裝 &lt;strong>Windows wsl2&lt;/strong> ，在上面執行 &lt;strong>Linux&lt;/strong> 系統，這樣你就可以輕鬆在 &lt;strong>Windows&lt;/strong> 電腦中使用 &lt;strong>Windows Terminal&lt;/strong> 切換到 &lt;strong>Linux&lt;/strong> 系統&lt;/p>
&lt;/blockquote></description></item><item><title>常用Linux指令一覽表 | Linux</title><link>https://benzhub.github.io/post/linux/001-command-line-table/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/001-command-line-table/</guid><description>&lt;blockquote>
&lt;p>常用Linux指令一覽表&lt;/p>
&lt;/blockquote></description></item></channel></rss>