<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networking on BenzHub</title>
    <link>https://benzhub.github.io/tags/networking/</link>
    <description>Recent content in Networking on BenzHub</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 08 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://benzhub.github.io/tags/networking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前端的重試、超時與退避策略（Backoff Strategy） | Javascript</title>
      <link>https://benzhub.github.io/post/javascript/039-backoff-strategy/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://benzhub.github.io/post/javascript/039-backoff-strategy/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;前端的重試、超時與退避策略（Backoff Strategy）是一種處理網路請求失敗和重試的策略。主要是在面對瞬間的網路問題或伺服器出錯的情況下，有效地減少對伺服器的大量重複請求，以避免對伺服器和網路造成過載。 &lt;strong&gt;重試、超時與退避策略的核心思想是在每次請求失敗後，逐漸增加重新請求的時間間隔。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>前端輪循(Frontend polling)技巧 | Javascript</title>
      <link>https://benzhub.github.io/post/javascript/038-frontend-polling/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://benzhub.github.io/post/javascript/038-frontend-polling/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;前端輪詢（Frontend Polling）&lt;/strong&gt; 是一種用於實現實時數據更新的簡單通信方法。它通過定期向伺服器發送請求來檢查是否有新的數據可用。輪詢是一種基本的客戶端-伺服器通信模型，儘管在現代開發中，使用 WebSocket 或 Server-Sent Events 等技術通常更為高效和實時，但在某些情況下仍然是有效的。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
