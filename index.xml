<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BenzHub</title><link>https://benzhub.github.io/</link><description>Recent content on BenzHub</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 29 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://benzhub.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Functions(函數)-Javascript</title><link>https://benzhub.github.io/post/javascript/013-functions/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/013-functions/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>JavaScript&lt;/strong> 函數(Functions)實現動態且可重複使用的程式碼。函數(Functions)封裝了一組指令，使你能夠定義可用不同輸入執行的邏輯。了解函數對於掌握 &lt;strong>JavaScript&lt;/strong> 非常重要，因為它們實現了模塊化、可維護性和代碼效率。&lt;/p>
&lt;/blockquote></description></item><item><title>函數：聲明 vs. 表達式(Functions: Declarations vs. Expressions)-Javascript</title><link>https://benzhub.github.io/post/javascript/014-function-declarations-vs-function-expressions/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/014-function-declarations-vs-function-expressions/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>JavaScript&lt;/strong> 中，定義函數的兩種主要方式是通過聲明式(Declarations)和表達式(Expressions)。沒有了解聲明式和表達式的不同，很多開發者會因為提升(hoisting)的問題，而在錯誤的地方調用函數&lt;/p>
&lt;/blockquote></description></item><item><title>嚴格模式的威力(Strict Mode)-Javascript</title><link>https://benzhub.github.io/post/javascript/012-strict-mode/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/012-strict-mode/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>JavaScript&lt;/strong> 在默認情況下對某些編碼並不 &lt;code>嚴謹&lt;/code>。然而，對於開發要求更嚴謹的開發者， &lt;strong>JavaScript&lt;/strong> 提供了一個稱為嚴格模式的功能。啟用嚴格模式對代碼實施更嚴格的規則，捕捉常見錯誤並防止使用某些易於出錯的功能。讓我們來看嚴格模式的好處以及如何有效利用它。&lt;/p>
&lt;/blockquote></description></item><item><title>箭頭函數的簡潔之美(Arrow Functions)-Javascript</title><link>https://benzhub.github.io/post/javascript/015-arrow-functions/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/015-arrow-functions/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>JavaScript&lt;/strong> 箭頭函數，引入自ES6，提供了一種簡潔而優雅的編寫函數的方式。箭頭函數簡化了代碼並提供了一種更具表達性的處理函數的方式。&lt;/p>
&lt;/blockquote></description></item><item><title>簡潔的決策工具: 三元運算符(Ternary Operator)-Javascript</title><link>https://benzhub.github.io/post/javascript/011-ternary-operator/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/011-ternary-operator/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>JavaScript&lt;/strong> 的決策工具中，三元運算符以其簡潔而強大的特性脫穎而出。通常被稱為&lt;code>條件運算符&lt;/code>，它提供了一種簡化的方式來表達簡單的條件語句。讓我們探討三元運算符是什麼，以及它如何增強你的代碼。&lt;/p>
&lt;/blockquote></description></item><item><title>Statements and Expressions(陳述式 VS 表達式)-Javascript</title><link>https://benzhub.github.io/post/javascript/010-statements-and-expressions/</link><pubDate>Thu, 28 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/010-statements-and-expressions/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>JavaScript&lt;/strong> 中，理解表達式(Javascript Expressions)和陳述式(Javascript Statements)之間的區別對於編寫高效而有效的代碼至關重要。
&lt;span class="text-blue-500 font-3xl text-2xl">表達式是產生值的代碼&lt;/span>
，而
&lt;span class="text-blue-500 font-3xl text-2xl">陳述式則是完整的代碼指令&lt;/span>
。讓我們深入探討這兩者之間的區別並探索它們的重要性。&lt;/p>
&lt;/blockquote></description></item><item><title>Switch Statement-Javascript</title><link>https://benzhub.github.io/post/javascript/009-switch-statement/</link><pubDate>Thu, 28 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/009-switch-statement/</guid><description>&lt;blockquote>
&lt;p>在 &lt;strong>JavaScript&lt;/strong> 中， &lt;strong>switch&lt;/strong> 語句是簡化代碼中決策過程的強大工具。它提供了一種優雅的替代方案，取代了多個if-else語句，提升了代碼的可讀性和可維護性。 &lt;strong>switch&lt;/strong> 語句根據匹配的情況評估表達式並執行一個代碼區塊。&lt;/p>
&lt;/blockquote></description></item><item><title>Boolean Logical Operators(布林邏輯操作)-Javascript</title><link>https://benzhub.github.io/post/javascript/008-boolean-logic/</link><pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/008-boolean-logic/</guid><description>&lt;blockquote>
&lt;p>布林邏輯運算子是 JavaScript 中製定決策和控制程式流程的基本工具。這些運算子允許你建立複雜的條件並有效地處理不同的情境。讓我們探索 JavaScript 中一些基本的布林邏輯運算子。&lt;/p>
&lt;/blockquote></description></item><item><title>Background and Border(背景和邊框)-CSS</title><link>https://benzhub.github.io/post/htmlcss/016-background-border/</link><pubDate>Tue, 26 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/016-background-border/</guid><description>&lt;blockquote>
&lt;p>在前端工程師的日常工作中，最常使用的應該就是 &lt;strong>background&lt;/strong> 和&lt;strong>border&lt;/strong> ，不管是在切版或是在關於美感的調配畫面比例，幾乎是每天都會使用，對於前端工程師來說， &lt;strong>background&lt;/strong> 和&lt;strong>border&lt;/strong> 是一定要熟練掌握的。&lt;/p>
&lt;/blockquote></description></item><item><title>Box Sizing Margin Padding(內容盒子與邊框盒子與內外距)-CSS</title><link>https://benzhub.github.io/post/htmlcss/017-box-sizing/</link><pubDate>Tue, 26 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/017-box-sizing/</guid><description>&lt;blockquote>
&lt;p>CSS 內容盒子與邊框盒子、外邊距和內邊距！這些基本屬性影響了你網頁中元素的大小、間距和位置。&lt;/p>
&lt;/blockquote></description></item><item><title>Color(顏色)-CSS</title><link>https://benzhub.github.io/post/htmlcss/015-css-color/</link><pubDate>Tue, 26 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/015-css-color/</guid><description>&lt;blockquote>
&lt;p>CSS 在顏色上可以使用 Hex、RGB和文字，我們這邊會用案例介紹這3種的使用方式&lt;/p>
&lt;/blockquote></description></item><item><title>Font Property(字體屬性)-CSS</title><link>https://benzhub.github.io/post/htmlcss/014-font-property/</link><pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/014-font-property/</guid><description>&lt;blockquote>
&lt;p>字體實際上很大程度的影響使用者對你的網站的好感度，因為如果使用錯誤的字體的話，網頁的可讀性太低，使用者可能會想要馬上就關閉你的網頁&lt;/p>
&lt;/blockquote></description></item><item><title>Values and Units(計量單位介紹)-CSS</title><link>https://benzhub.github.io/post/htmlcss/013-values-and-units/</link><pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/013-values-and-units/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>CSS&lt;/strong> 計量單位分為絕對單位和相對單位，許多人因為使用錯誤的單位，常常導致在RWD(響應式)中畫面發生顯示元素錯誤&lt;/p>
&lt;/blockquote></description></item><item><title>陣列(Arrays)-Javascript</title><link>https://benzhub.github.io/post/javascript/016-arrays/</link><pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/016-arrays/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>JavaScript&lt;/strong> 陣列(Arrays)是開發時常見的數據結構。它提供了一種方便的方式來組織和操作資料集合。我們將介紹 &lt;strong>JavaScript&lt;/strong> 陣列(Arrays)的各種常見操作方式以及它們在各種情境中的有效應用。&lt;/p>
&lt;/blockquote></description></item><item><title>CSS Basic Selector(基礎的CSS選擇器)-CSS</title><link>https://benzhub.github.io/post/htmlcss/012-css-basic-selector/</link><pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/012-css-basic-selector/</guid><description>&lt;blockquote>
&lt;p>常見的CSS 選擇器的使用方式&lt;/p>
&lt;/blockquote></description></item><item><title>CSS Import(CSS引用方式)-CSS</title><link>https://benzhub.github.io/post/htmlcss/011-css-import/</link><pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/011-css-import/</guid><description>&lt;blockquote>
&lt;p>3種 &lt;strong>css&lt;/strong> 在 &lt;strong>HTML&lt;/strong> 中使用的方式&lt;/p>
&lt;/blockquote></description></item><item><title>div and span(常見塊級元素和內聯元素的搭配使用)-HTML</title><link>https://benzhub.github.io/post/htmlcss/009-div-and-span-tag/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/009-div-and-span-tag/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>&amp;lt;div&amp;gt;&lt;/strong> 是塊級元素，&lt;strong>&amp;lt;span&amp;gt;&lt;/strong> 是內聯元素因此常常互相搭配 &lt;strong>&amp;lt;p&amp;gt;&lt;/strong> 標籤使用，讓文章不會有強制換行的問題&lt;/p>
&lt;/blockquote></description></item><item><title>HTML Character Entity(字符實體和符號)-HTML</title><link>https://benzhub.github.io/post/htmlcss/010-html-character-entity/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/010-html-character-entity/</guid><description>&lt;blockquote>
&lt;p>HTML 字符實體在顯示特殊字元方面非常的方便，且可以避免引用大量圖片，提升網頁的效能&lt;/p>
&lt;/blockquote></description></item><item><title>Block Element and Inline Element(塊級元素&amp;內聯元素)-HTML</title><link>https://benzhub.github.io/post/htmlcss/008-block-element-and-inline-element/</link><pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/008-block-element-and-inline-element/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>HTML&lt;/strong> 區塊級元素和內聯元素！理解這兩者之間的差異對於打造結構良好的網頁非常重要。&lt;/p>
&lt;/blockquote></description></item><item><title>Form and Input(表單和輸入框標籤)-HTML</title><link>https://benzhub.github.io/post/htmlcss/007-form-and-input/</link><pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/007-form-and-input/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>HTML&lt;/strong> 表單和輸入框！常常是使用者與網站的互動的元件。清楚的認識這兩個HTML標籤是非常重要的&lt;/p>
&lt;/blockquote></description></item><item><title>HyperLink and Image(超鏈結和圖片)-HTML</title><link>https://benzhub.github.io/post/htmlcss/005-hyperlink-and-image/</link><pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/005-hyperlink-and-image/</guid><description>&lt;blockquote>
&lt;p>探討了 HTML 的 &lt;strong>&amp;lt;a&amp;gt;&lt;/strong> 和 &lt;strong>&amp;lt;img&amp;gt;&lt;/strong> 標籤的基礎知識，揭示了它們的簡單性和重要性&lt;/p>
&lt;/blockquote></description></item><item><title>List and Table(有序列表&amp;無序列表&amp;表格)-HTML</title><link>https://benzhub.github.io/post/htmlcss/006-list-table/</link><pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/006-list-table/</guid><description>&lt;blockquote>
&lt;p>使用 &lt;strong>HTML&lt;/strong> 中列表和表格！列表結構的內容，或用表格以邏輯方式條列資訊。&lt;/p>
&lt;/blockquote></description></item><item><title>Paragraph-and-Tags(基礎標題段落排版標籤)-HTML</title><link>https://benzhub.github.io/post/htmlcss/004-paragraph-and-tags/</link><pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/004-paragraph-and-tags/</guid><description>&lt;blockquote>
&lt;p>理解 HTML 的標籤和其他基本元素的強大之處是網頁開發的基礎。&lt;/p>
&lt;/blockquote></description></item><item><title>Meta Tag &amp; SEO(meta標籤和搜尋引擎)-HTML</title><link>https://benzhub.github.io/post/htmlcss/003-meta-tag-seo/</link><pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/003-meta-tag-seo/</guid><description>&lt;blockquote>
&lt;p>學習撰寫描述、標題和其他，以提升你網站的可見性。無論你是網站所有者、開發人員還是 SEO 實踐者，了解這些 HTML 標籤策略對於優化你的網站存在、有效地觸及目標受眾至關重要。&lt;/p>
&lt;/blockquote></description></item><item><title>前端常用開發工具</title><link>https://benzhub.github.io/post/htmlcss/002-front-end-tools/</link><pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/002-front-end-tools/</guid><description>&lt;blockquote>
&lt;p>我們再進行前端開發的時候，利用工具可以幫助我們進行快速得開發而且還可以更加美觀&lt;/p>
&lt;/blockquote></description></item><item><title>Equality Operators(嚴格等式VS鬆散等式)-Javascript</title><link>https://benzhub.github.io/post/javascript/007-equality-operators/</link><pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/007-equality-operators/</guid><description>&lt;blockquote>
&lt;p>理解如何比較值是程式設計的基礎。我們探討了等值運算子 &lt;strong>==&lt;/strong> 和 &lt;strong>===&lt;/strong> 的微妙差異，用範例理解它們的內在細節差異。我們將解開鬆散和嚴格等值比較，當你在編寫更複雜的程式碼中的會有巨大幫助。無論你是初學者還是經驗豐富的開發人員，掌握等值運算子是發揮 &lt;strong>JavaScript&lt;/strong> 完整潛力的關鍵一步。&lt;/p>
&lt;/blockquote></description></item><item><title>利用VS Code 快速創建並開啟HTML頁面-HTML</title><link>https://benzhub.github.io/post/htmlcss/001-create-html/</link><pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/htmlcss/001-create-html/</guid><description>&lt;blockquote>
&lt;p>新手在撰寫HTML頁面的時候，往往會不知道從哪裡下手，我們利用 &lt;strong>VS Code&lt;/strong>，先快速創建簡易HTML模板，讓我們快速上手&lt;/p>
&lt;/blockquote></description></item><item><title>Truthy and Falsy(真值、假值)-Javascript</title><link>https://benzhub.github.io/post/javascript/006-truthy-and-falsy/</link><pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/006-truthy-and-falsy/</guid><description>&lt;blockquote>
&lt;p>了解真值（例如，字串、數字）和假值（例如，null、undefined）對於編寫高效且清晰的程式碼至關重要。透過實際範例列出常見的真值(Truthy)和假值(Falsy)場景，很好的幫助你寫出高效的程式碼。&lt;/p>
&lt;/blockquote></description></item><item><title>Type Conversion(型別轉換)-Javascript</title><link>https://benzhub.github.io/post/javascript/005-type-conversion/</link><pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/005-type-conversion/</guid><description>&lt;blockquote>
&lt;p>理解 &lt;strong>JavaScript&lt;/strong> 如何進行型別轉換和強制轉換非常重要。這就是為什麼一個字串 &lt;code>5&lt;/code> 可以變成數字 5 的原因。在這篇文章中，我們將示範 &lt;strong>JavaScript&lt;/strong> 如何進行這些轉換，讓你簡單的理解運作的原理。&lt;/p>
&lt;/blockquote></description></item><item><title>安裝&amp;啟動JupyterLab-Python</title><link>https://benzhub.github.io/post/python/001-install-jupyterlab/</link><pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/python/001-install-jupyterlab/</guid><description>&lt;blockquote>
&lt;p>Python JupyterLab 是一個功能強大的開源基於 Web 的 Python 交互式計算環境。它允許用戶創建並共享包含實時代碼、方程式、可視化和敘述文本的文檔。由於其多功能性和易用性，JupyterLab 支持各種語言並在數據科學、機器學習和科學計算中被廣泛使用。&lt;/p>
&lt;/blockquote></description></item><item><title>if else Statements(條件式)-Javascript</title><link>https://benzhub.github.io/post/javascript/004-if-else-statements/</link><pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/004-if-else-statements/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>JavaScript&lt;/strong> 的 &lt;strong>if&lt;/strong> 和 &lt;strong>else&lt;/strong> 語法就像程式碼中的決策者。它允許你的程式根據條件選擇不同的路徑。想像一下它就像是一個岔路口：如果一個條件為真，就走一條路；如果為假，就走另一條路。&lt;/p>
&lt;/blockquote></description></item><item><title>给Linux配置漂亮且强大的zsh-Linux</title><link>https://benzhub.github.io/post/linux/004-install-zsh/</link><pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/004-install-zsh/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Zsh&lt;/strong> 因為有自動補全指令的功能 ，因此深受工程師的喜愛，這邊我們使用熱門的oh-my-zsh，一步一步來安裝設定我們的 &lt;strong>Zsh&lt;/strong> 吧!&lt;/p>
&lt;/blockquote></description></item><item><title>Linux有哪些Shell-Linux</title><link>https://benzhub.github.io/post/linux/002-linux-shell/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/002-linux-shell/</guid><description>&lt;blockquote>
&lt;p>我們來介紹一些常見的Linux Shell。 以及講解 &lt;strong>Shell&lt;/strong> 、 &lt;strong>Bash&lt;/strong> 和 &lt;strong>Zsh&lt;/strong> 的區別在哪?&lt;/p>
&lt;/blockquote></description></item><item><title>Template Literals(字串模板)-Javascript</title><link>https://benzhub.github.io/post/javascript/003-template-literals/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/003-template-literals/</guid><description>&lt;blockquote>
&lt;p>Template Literals(字串模板)，在Javascript中我們會很常用使用到，在字串(string)中帶入變數(variable)的技巧一定要熟練的掌握&lt;/p>
&lt;/blockquote></description></item><item><title>在Windows上使用wsl2執行Linux-Linux</title><link>https://benzhub.github.io/post/linux/003-run-linux-on-windows/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/003-run-linux-on-windows/</guid><description>&lt;blockquote>
&lt;p>如果我們想要練習Linux 指令，但又只有Windows的電腦的話，這邊推薦你安裝Windows wsl2，在上面執行Linux系統，這樣你就可以輕鬆在Windows電腦中使用Windows Terminal切換到Linux系統&lt;/p>
&lt;/blockquote></description></item><item><title>Operator Precedence(運算子優先序)-Javascript</title><link>https://benzhub.github.io/post/javascript/002-operator-precedence/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/002-operator-precedence/</guid><description>&lt;blockquote>
&lt;p>Operator Precedence(運算子優先序)，在Javascript中大部分我們的運算都跟我們數學中的方式很像，都是先乘除後加減的方式在運作&lt;/p>
&lt;/blockquote></description></item><item><title>常用Linux指令一覽表-Linux</title><link>https://benzhub.github.io/post/linux/001-command-line-table/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/linux/001-command-line-table/</guid><description>&lt;blockquote>
&lt;p>常用Linux指令一覽表&lt;/p>
&lt;/blockquote></description></item><item><title>Variables(變數)-Javascript</title><link>https://benzhub.github.io/post/javascript/001-variables/</link><pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/post/javascript/001-variables/</guid><description>&lt;blockquote>
&lt;p>變數(Variables)是任何程式的基礎石，作為儲存和管理資料的容器。與其他語言中的資料類型不同，JavaScript 變數(Variables)是動態類型的。這種靈活性可以使Javascript開發人員能夠創造更多具有靈活性的程式碼。&lt;/p>
&lt;/blockquote></description></item><item><title>聯絡我</title><link>https://benzhub.github.io/contact/</link><pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/contact/</guid><description>Contact Info Email : lenrich1403@gmail.com</description></item><item><title>關於我</title><link>https://benzhub.github.io/about/</link><pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate><guid>https://benzhub.github.io/about/</guid><description>Hello, I’m Ben Z 癡迷於各種技術Python, Linux, Node.js, React, React Native, Docker, SEO &amp;hellip;
這個網站主要分享我的學習心得,將學習筆記整理成部落格文章
我的個人GitHub.網址
技術交流歡迎到&amp;lt;聯絡我&amp;gt;分頁來信討論</description></item></channel></rss>