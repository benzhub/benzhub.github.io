<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2024/03 on BenzHub</title>
    <link>https://benzhub.github.io/archives/2024/03/</link>
    <description>Recent content in 2024/03 on BenzHub</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 08 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://benzhub.github.io/archives/2024/03/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Javascript各種情況下的this | Javascript</title>
      <link>https://benzhub.github.io/post/javascript/051-this-situation/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://benzhub.github.io/post/javascript/051-this-situation/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在 JavaScript 中，「this」是一個令人頭痛但同時又是極其重要的概念。它的值取決於該函數是如何被呼叫的，而這種動態的指向方式可能會導致許多混淆和錯誤。在這篇文章中，本篇文章我們將探討 JavaScript 中各種情況下的「this」，揭示它背後的運作的邏輯，幫助你更好地理解。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Python中的*args和**kwargs：讓你的函式更具彈性 | Python</title>
      <link>https://benzhub.github.io/post/python/020-args-kwargs/</link>
      <pubDate>Wed, 06 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://benzhub.github.io/post/python/020-args-kwargs/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在Python程式設計中，*args和**kwargs是兩個強大的功能，可以讓你的函式更具彈性，讓你能夠處理不確定數量的參數。這兩個概念在函式設計中非常常見，特別是在需要處理各種不同類型的資料時。在本篇文章中，我們將深入探討*args和**kwargs的概念，並提供一些實用的範例，幫助你更好地理解它們的使用方法。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Python的物件導向程式設計 | Python</title>
      <link>https://benzhub.github.io/post/python/021-oop/</link>
      <pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://benzhub.github.io/post/python/021-oop/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;物件導向程式設計（Object-Oriented Programming，簡稱OOP）已成為軟體開發中一個極為重要的程式設計方法。Python作為一門廣泛應用的程式語言，也支援物件導向程式設計。本篇將會介紹Python中的物件導向程式設計，以及一些基本概念和範例。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>深入探索Git Rebase：提升你的分支合併技能 | Git</title>
      <link>https://benzhub.github.io/post/git/018-cherry-pick/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://benzhub.github.io/post/git/018-cherry-pick/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在開發中，我們常常會遇到需要合併不同分支上的特定提交（commit）的情況。這時候，Git 提供了一個強大的工具，就是 &lt;code&gt;cherry-pick&lt;/code&gt;。這個指令可以讓你從其他分支中選擇單獨的提交，並將其應用到目前的分支中。讓我們一起來看看如何使用 &lt;code&gt;cherry-pick&lt;/code&gt; 這個神奇的指令吧！&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>深入探索Git Rebase：提升你的分支合併技能 | Git</title>
      <link>https://benzhub.github.io/post/git/017-rebase/</link>
      <pubDate>Sat, 02 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://benzhub.github.io/post/git/017-rebase/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Git rebase 是一個強大而又常被忽視的功能，它允許開發人員重新定義提交的歷史，提供了更加乾淨、簡潔的提交歷史。本篇將深入探討Git rebase的原理、使用方式以及常見應用場景。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>常見 JavaScript 字串操作方法總覽 | Javascript</title>
      <link>https://benzhub.github.io/post/javascript/050-string-operations/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://benzhub.github.io/post/javascript/050-string-operations/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;JavaScript 是一門廣泛用於網頁開發的程式語言，它提供了豐富的字串操作方法，讓開發者可以輕鬆地處理和轉換文字數據。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
